/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AngelaList, AngelaListInterface } from "../AngelaList";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103df806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632eb4a7ab146100675780634783f0ef14610083578063715018a6146100985780638da5cb5b146100a05780639498bd71146100bb578063f2fde38b146100ce575b600080fd5b61007060655481565b6040519081526020015b60405180910390f35b61009661009136600461032b565b6100e1565b005b61009661014f565b6033546040516001600160a01b03909116815260200161007a565b6100966100c936600461032b565b610185565b6100966100dc366004610344565b61023e565b6033546001600160a01b031633146101145760405162461bcd60e51b815260040161010b90610374565b60405180910390fd5b60658190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6033546001600160a01b031633146101795760405162461bcd60e51b815260040161010b90610374565b61018360006102d9565b565b600054610100900460ff168061019e575060005460ff16155b6102015760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161010b565b600054610100900460ff16158015610223576000805461ffff19166101011790555b6065829055801561023a576000805461ff00191690555b5050565b6033546001600160a01b031633146102685760405162461bcd60e51b815260040161010b90610374565b6001600160a01b0381166102cd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161010b565b6102d6816102d9565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561033d57600080fd5b5035919050565b60006020828403121561035657600080fd5b81356001600160a01b038116811461036d57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220e034a3f34e0bda57124460579e2ab8d86896467eb68525e545b0d194764487fa64736f6c63430008090033";

export class AngelaList__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AngelaList> {
    return super.deploy(overrides || {}) as Promise<AngelaList>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AngelaList {
    return super.attach(address) as AngelaList;
  }
  connect(signer: Signer): AngelaList__factory {
    return super.connect(signer) as AngelaList__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelaListInterface {
    return new utils.Interface(_abi) as AngelaListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AngelaList {
    return new Contract(address, _abi, signerOrProvider) as AngelaList;
  }
}
