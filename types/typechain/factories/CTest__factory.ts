/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintWithSigNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permitNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b5061282380620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806364e9293e1161010f578063b88d4fde116100a2578063e985e9c511610071578063e985e9c514610457578063f2fde38b14610493578063f8ccd5de146104a6578063fbd8d283146104d157600080fd5b8063b88d4fde1461040b578063c87b56dd1461041e578063ce3d22e414610431578063cf1157161461044457600080fd5b80638da5cb5b116100de5780638da5cb5b146103d557806390657147146103dd57806395d89b41146103f0578063a22cb465146103f857600080fd5b806364e9293e14610386578063669d311c146103a757806370a08231146103ba578063715018a6146103cd57600080fd5b80632a55205a1161018757806344dcc2321161015657806344dcc2321461033a5780634783f0ef1461034d578063510b5158146103605780636352211e1461037357600080fd5b80632a55205a146102d95780632eb4a7ab1461030b57806342842e0e1461031457806342966c681461032757600080fd5b80630bcd899b116101c35780630bcd899b146102725780630c0a9d26146102a05780631cbbc6e2146102b357806323b872dd146102c657600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004611f8f565b6104e4565b60405190151581526020015b60405180910390f35b61022561050f565b6040516102149190611ff9565b61024561024036600461200c565b6105a1565b6040516001600160a01b039091168152602001610214565b61027061026b366004612041565b61062e565b005b61029261028036600461206b565b60cd6020526000908152604090205481565b604051908152602001610214565b6102256102ae36600461200c565b610744565b6102706102c1366004612132565b6107e9565b6102706102d436600461219f565b610863565b6102ec6102e73660046121db565b610894565b604080516001600160a01b039093168352602083019190915201610214565b61029260c95481565b61027061032236600461219f565b61090b565b61027061033536600461200c565b610926565b61022561034836600461200c565b610973565b61027061035b36600461200c565b610a0d565b61024561036e36600461200c565b610a77565b61024561038136600461200c565b610abd565b61039961039436600461200c565b610b34565b6040516102149291906121fd565b6102706103b536600461222b565b610cc2565b6102926103c836600461206b565b610d22565b610270610da9565b610245610de4565b6102706103eb366004612257565b610dfd565b610225610e94565b610270610406366004612292565b610ea3565b6102706104193660046122ce565b610f68565b61022561042c36600461200c565b610f9a565b61027061043f36600461235c565b610fda565b610270610452366004612401565b611174565b610208610465366004612502565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102706104a136600461206b565b6113c1565b6102926104b4366004612041565b60cc60209081526000928352604080842090915290825290205481565b6102456104df36600461200c565b61145e565b600063152a902d60e11b6001600160e01b0319831614806105095750610509826114a4565b92915050565b60606065805461051e9061252c565b80601f016020809104026020016040519081016040528092919081815260200182805461054a9061252c565b80156105975780601f1061056c57610100808354040283529160200191610597565b820191906000526020600020905b81548152906001019060200180831161057a57829003601f168201915b5050505050905090565b60006105ac826114f4565b6106125760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061063982610abd565b9050806001600160a01b0316836001600160a01b031614156106a75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610609565b336001600160a01b03821614806106c357506106c38133610465565b6107355760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610609565b61073f8383611511565b505050565b600081815260cb602052604090206001018054606091906107649061252c565b80601f01602080910402602001604051908101604052809291908181526020018280546107909061252c565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b50505050509050919050565b336107f2610de4565b6001600160a01b0316146108185760405162461bcd60e51b815260040161060990612567565b600083815260cb60209081526040909120835161083792850190611ee0565b50600083815260cb60209081526040909120825161085d92600190920191840190611ee0565b50505050565b61086d338261157f565b6108895760405162461bcd60e51b81526004016106099061259c565b61073f838383611669565b600080806108a0610de4565b6001600160a01b031614156108c2576108b7610de4565b600091509150610904565b6108ca610de4565b600085815260cb6020526040902060030154612710906108f590600160a01b900461ffff1686612603565b6108ff9190612622565b915091505b9250929050565b61073f83838360405180602001604052806000815250610f68565b3361092f610de4565b6001600160a01b0316146109555760405162461bcd60e51b815260040161060990612567565b61095e816114f4565b61096757600080fd5b61097081611809565b50565b60ca602052600090815260409020805461098c9061252c565b80601f01602080910402602001604051908101604052809291908181526020018280546109b89061252c565b8015610a055780601f106109da57610100808354040283529160200191610a05565b820191906000526020600020905b8154815290600101906020018083116109e857829003601f168201915b505050505081565b33610a16610de4565b6001600160a01b031614610a3c5760405162461bcd60e51b815260040161060990612567565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6000610a82826114f4565b610a9e5760405162461bcd60e51b815260040161060990612644565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806105095760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610609565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b679061252c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b939061252c565b8015610be05780601f10610bb557610100808354040283529160200191610be0565b820191906000526020600020905b815481529060010190602001808311610bc357829003601f168201915b50505050508152602001600182018054610bf99061252c565b80601f0160208091040260200160405190810160405280929190818152602001828054610c259061252c565b8015610c725780601f10610c4757610100808354040283529160200191610c72565b820191906000526020600020905b815481529060010190602001808311610c5557829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33610ccb610de4565b6001600160a01b031614610cf15760405162461bcd60e51b815260040161060990612567565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610d8d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610609565b506001600160a01b031660009081526068602052604090205490565b33610db2610de4565b6001600160a01b031614610dd85760405162461bcd60e51b815260040161060990612567565b610de260006118a4565b565b6000610df86097546001600160a01b031690565b905090565b600054610100900460ff1680610e16575060005460ff16155b610e325760405162461bcd60e51b815260040161060990612693565b600054610100900460ff16158015610e54576000805461ffff19166101011790555b610e5e83836118f6565b610e6661197d565b610e6f846113c1565b610e7d60ce80546001019055565b801561085d576000805461ff001916905550505050565b60606066805461051e9061252c565b6001600160a01b038216331415610efc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610609565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610f72338361157f565b610f8e5760405162461bcd60e51b81526004016106099061259c565b61085d848484846119f8565b6060610fa5826114f4565b610fc15760405162461bcd60e51b815260040161060990612644565b600082815260cb6020526040902080546107649061252c565b6127108161ffff161061102f5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e21000000006044820152606401610609565b600061103a60ce5490565b90506110468782611a2b565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb825292909220815180519293919261109d9284920190611ee0565b5060208281015180516110b69260018501920190611ee0565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b03199094169282169290921792909217905584168161111b3390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca89896040516111559291906121fd565b60405180910390a461116b60ce80546001019055565b50505050505050565b60408051606087901b6bffffffffffffffffffffffff191660208083019190915282516014818403018152603490920190925280519101206111e990838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611a4992505050565b6112255760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606401610609565b6127108361ffff161061127a5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e21000000006044820152606401610609565b600061128560ce5490565b90506112918982611a2b565b6040805160a08101825289815260208082018a90526001600160a01b03808a16838501528816606083015261ffff87166080830152600084815260cb82529290922081518051929391926112e89284920190611ee0565b5060208281015180516113019260018501920190611ee0565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558616816113663390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8b8b6040516113a09291906121fd565b60405180910390a46113b660ce80546001019055565b505050505050505050565b336113ca610de4565b6001600160a01b0316146113f05760405162461bcd60e51b815260040161060990612567565b6001600160a01b0381166114555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610609565b610970816118a4565b6000611469826114f4565b6114855760405162461bcd60e51b815260040161060990612644565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b14806114d557506001600160e01b03198216635b5e139f60e01b145b8061050957506301ffc9a760e01b6001600160e01b0319831614610509565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061154682610abd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061158a826114f4565b6115eb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610609565b60006115f683610abd565b9050806001600160a01b0316846001600160a01b031614806116315750836001600160a01b0316611626846105a1565b6001600160a01b0316145b8061166157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661167c82610abd565b6001600160a01b0316146116e45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610609565b6001600160a01b0382166117465760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610609565b611751600082611511565b6001600160a01b038316600090815260686020526040812080546001929061177a9084906126e1565b90915550506001600160a01b03821660009081526068602052604081208054600192906117a89084906126f8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061181482610abd565b9050611821600083611511565b6001600160a01b038116600090815260686020526040812080546001929061184a9084906126e1565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061190f575060005460ff16155b61192b5760405162461bcd60e51b815260040161060990612693565b600054610100900460ff1615801561194d576000805461ffff19166101011790555b611955611a5f565b61195d611a5f565b6119678383611ac9565b801561073f576000805461ff0019169055505050565b600054610100900460ff1680611996575060005460ff16155b6119b25760405162461bcd60e51b815260040161060990612693565b600054610100900460ff161580156119d4576000805461ffff19166101011790555b6119dc611a5f565b6119e4611b5e565b8015610970576000805461ff001916905550565b611a03848484611669565b611a0f84848484611bbe565b61085d5760405162461bcd60e51b815260040161060990612710565b611a45828260405180602001604052806000815250611ccb565b5050565b6000611a588260c95485611cfe565b9392505050565b600054610100900460ff1680611a78575060005460ff16155b611a945760405162461bcd60e51b815260040161060990612693565b600054610100900460ff161580156119e4576000805461ffff19166101011790558015610970576000805461ff001916905550565b600054610100900460ff1680611ae2575060005460ff16155b611afe5760405162461bcd60e51b815260040161060990612693565b600054610100900460ff16158015611b20576000805461ffff19166101011790555b8251611b33906065906020860190611ee0565b508151611b47906066906020850190611ee0565b50801561073f576000805461ff0019169055505050565b600054610100900460ff1680611b77575060005460ff16155b611b935760405162461bcd60e51b815260040161060990612693565b600054610100900460ff16158015611bb5576000805461ffff19166101011790555b6119e4336118a4565b60006001600160a01b0384163b15611cc057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c02903390899088908890600401612762565b602060405180830381600087803b158015611c1c57600080fd5b505af1925050508015611c4c575060408051601f3d908101601f19168201909252611c499181019061279f565b60015b611ca6573d808015611c7a576040519150601f19603f3d011682016040523d82523d6000602084013e611c7f565b606091505b508051611c9e5760405162461bcd60e51b815260040161060990612710565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611661565b506001949350505050565b611cd58383611dad565b611ce26000848484611bbe565b61073f5760405162461bcd60e51b815260040161060990612710565b600081815b8551811015611da2576000868281518110611d2057611d206127bc565b60200260200101519050808311611d62576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611d8f565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611d9a816127d2565b915050611d03565b509092149392505050565b6001600160a01b038216611e035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610609565b611e0c816114f4565b15611e595760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610609565b6001600160a01b0382166000908152606860205260408120805460019290611e829084906126f8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611eec9061252c565b90600052602060002090601f016020900481019282611f0e5760008555611f54565b82601f10611f2757805160ff1916838001178555611f54565b82800160010185558215611f54579182015b82811115611f54578251825591602001919060010190611f39565b50611f60929150611f64565b5090565b5b80821115611f605760008155600101611f65565b6001600160e01b03198116811461097057600080fd5b600060208284031215611fa157600080fd5b8135611a5881611f79565b6000815180845260005b81811015611fd257602081850181015186830182015201611fb6565b81811115611fe4576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a586020830184611fac565b60006020828403121561201e57600080fd5b5035919050565b80356001600160a01b038116811461203c57600080fd5b919050565b6000806040838503121561205457600080fd5b61205d83612025565b946020939093013593505050565b60006020828403121561207d57600080fd5b611a5882612025565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156120b7576120b7612086565b604051601f8501601f19908116603f011681019082821181831017156120df576120df612086565b816040528093508581528686860111156120f857600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261212357600080fd5b611a588383356020850161209c565b60008060006060848603121561214757600080fd5b83359250602084013567ffffffffffffffff8082111561216657600080fd5b61217287838801612112565b9350604086013591508082111561218857600080fd5b5061219586828701612112565b9150509250925092565b6000806000606084860312156121b457600080fd5b6121bd84612025565b92506121cb60208501612025565b9150604084013590509250925092565b600080604083850312156121ee57600080fd5b50508035926020909101359150565b6040815260006122106040830185611fac565b82810360208401526122228185611fac565b95945050505050565b6000806040838503121561223e57600080fd5b8235915061224e60208401612025565b90509250929050565b60008060006060848603121561226c57600080fd5b61227584612025565b9250602084013567ffffffffffffffff8082111561216657600080fd5b600080604083850312156122a557600080fd5b6122ae83612025565b9150602083013580151581146122c357600080fd5b809150509250929050565b600080600080608085870312156122e457600080fd5b6122ed85612025565b93506122fb60208601612025565b925060408501359150606085013567ffffffffffffffff81111561231e57600080fd5b8501601f8101871361232f57600080fd5b61233e8782356020840161209c565b91505092959194509250565b803561ffff8116811461203c57600080fd5b60008060008060008060c0878903121561237557600080fd5b61237e87612025565b9550602087013567ffffffffffffffff8082111561239b57600080fd5b6123a78a838b01612112565b965060408901359150808211156123bd57600080fd5b506123ca89828a01612112565b9450506123d960608801612025565b92506123e760808801612025565b91506123f560a0880161234a565b90509295509295509295565b60008060008060008060008060e0898b03121561241d57600080fd5b61242689612025565b9750602089013567ffffffffffffffff8082111561244357600080fd5b61244f8c838d01612112565b985060408b013591508082111561246557600080fd5b6124718c838d01612112565b975061247f60608c01612025565b965061248d60808c01612025565b955061249b60a08c0161234a565b945060c08b01359150808211156124b157600080fd5b818b0191508b601f8301126124c557600080fd5b8135818111156124d457600080fd5b8c60208260051b85010111156124e957600080fd5b6020830194508093505050509295985092959890939650565b6000806040838503121561251557600080fd5b61251e83612025565b915061224e60208401612025565b600181811c9082168061254057607f821691505b6020821081141561256157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561261d5761261d6125ed565b500290565b60008261263f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156126f3576126f36125ed565b500390565b6000821982111561270b5761270b6125ed565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061279590830184611fac565b9695505050505050565b6000602082840312156127b157600080fd5b8151611a5881611f79565b634e487b7160e01b600052603260045260246000fd5b60006000198214156127e6576127e66125ed565b506001019056fea2646970667358221220ff4a55dc615dcaf8f9ec214c9c497620802190ed789b39de74c0630cc66fb18164736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
