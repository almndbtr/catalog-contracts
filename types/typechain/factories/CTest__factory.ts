/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506128d880620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806364e9293e1161010f578063a22cb465116100a2578063cf11571611610071578063cf11571614610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b8063a22cb465146103e9578063b88d4fde146103fc578063c87b56dd1461040f578063ce3d22e41461042257600080fd5b80638da5cb5b116100de5780638da5cb5b146103aa5780638fe86b3f146103bb57806390657147146103ce57806395d89b41146103e157600080fd5b806364e9293e1461035b578063669d311c1461037c57806370a082311461038f578063715018a6146103a257600080fd5b80632a55205a1161018757806344dcc2321161015657806344dcc2321461030f5780634783f0ef14610322578063510b5158146103355780636352211e1461034857600080fd5b80632a55205a146102a05780632eb4a7ab146102d257806342842e0e146102e957806342966c68146102fc57600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806323b872dd1461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611ffd565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b6040516102099190612067565b61023a61023536600461207a565b610567565b6040516001600160a01b039091168152602001610209565b6102656102603660046120af565b6105f4565b005b61021a61027536600461207a565b61070a565b610265610288366004612185565b6107af565b61026561029b3660046121f2565b610824565b6102b36102ae36600461222e565b610855565b604080516001600160a01b039093168352602083019190915201610209565b6102db60c95481565b604051908152602001610209565b6102656102f73660046121f2565b6108dc565b61026561030a36600461207a565b6108f7565b61021a61031d36600461207a565b610949565b61026561033036600461207a565b6109e3565b61023a61034336600461207a565b610a48565b61023a61035636600461207a565b610a8e565b61036e61036936600461207a565b610b05565b604051610209929190612250565b61026561038a36600461227e565b610c93565b6102db61039d3660046122aa565b610cee565b610265610d75565b6097546001600160a01b031661023a565b6102656103c93660046122c5565b610dab565b6102656103dc36600461230c565b610e79565b61021a610f07565b6102656103f7366004612347565b610f16565b61026561040a366004612383565b610fdb565b61021a61041d36600461207a565b61100d565b610265610430366004612411565b61104d565b6102656104433660046124b6565b6111e7565b6101fd6104563660046125b7565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102656104923660046122aa565b611434565b61023a6104a536600461207a565b6114cc565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf82611512565b92915050565b6060606580546104e4906125e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610510906125e1565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b600061057282611562565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610a8e565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b610705838361157f565b505050565b600081815260cb6020526040902060010180546060919061072a906125e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610756906125e1565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf9061261c565b600083815260cb6020908152604090912083516107f892850190611f4e565b50600083815260cb60209081526040909120825161081e92600190920191840190611f4e565b50505050565b61082e33826115ed565b61084a5760405162461bcd60e51b81526004016105cf90612651565b6107058383836116d7565b6000808061086b6097546001600160a01b031690565b6001600160a01b0316141561088f5750506097546001600160a01b031660006108d5565b6097546001600160a01b0316600085815260cb6020526040902060030154612710906108c690600160a01b900461ffff16866126b8565b6108d091906126d7565b915091505b9250929050565b61070583838360405180602001604052806000815250610fdb565b61090133826115ed565b61093d5760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b61094681611877565b50565b60ca6020526000908152604090208054610962906125e1565b80601f016020809104026020016040519081016040528092919081815260200182805461098e906125e1565b80156109db5780601f106109b0576101008083540402835291602001916109db565b820191906000526020600020905b8154815290600101906020018083116109be57829003601f168201915b505050505081565b6097546001600160a01b03163314610a0d5760405162461bcd60e51b81526004016105cf9061261c565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6000610a5382611562565b610a6f5760405162461bcd60e51b81526004016105cf906126f9565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b38906125e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b64906125e1565b8015610bb15780601f10610b8657610100808354040283529160200191610bb1565b820191906000526020600020905b815481529060010190602001808311610b9457829003601f168201915b50505050508152602001600182018054610bca906125e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf6906125e1565b8015610c435780601f10610c1857610100808354040283529160200191610c43565b820191906000526020600020905b815481529060010190602001808311610c2657829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b03163314610cbd5760405162461bcd60e51b81526004016105cf9061261c565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610d595760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610d9f5760405162461bcd60e51b81526004016105cf9061261c565b610da96000611912565b565b81610db581611562565b610df85760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b03163314610e225760405162461bcd60e51b81526004016105cf9061261c565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c4730983604051610e529190612067565b60405180910390a2600083815260cb60209081526040909120835161081e92850190611f4e565b600054610100900460ff1680610e92575060005460ff16155b610eae5760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff16158015610ed0576000805461ffff19166101011790555b610eda8383611964565b610ee26119eb565b610ef060cc80546001019055565b801561081e576000805461ff001916905550505050565b6060606680546104e4906125e1565b6001600160a01b038216331415610f6f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610fe533836115ed565b6110015760405162461bcd60e51b81526004016105cf90612651565b61081e84848484611a66565b606061101882611562565b6110345760405162461bcd60e51b81526004016105cf906126f9565b600082815260cb60205260409020805461072a906125e1565b6127108161ffff16106110a25760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006110ad60cc5490565b90506110b98782611a99565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb82529290922081518051929391926111109284920190611f4e565b5060208281015180516111299260018501920190611f4e565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b03199094169282169290921792909217905584168161118e3390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca89896040516111c8929190612250565b60405180910390a46111de60cc80546001019055565b50505050505050565b60408051606087901b6bffffffffffffffffffffffff1916602080830191909152825160148184030181526034909201909252805191012061125c90838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611ab792505050565b6112985760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b6127108361ffff16106112ed5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006112f860cc5490565b90506113048982611a99565b6040805160a08101825289815260208082018a90526001600160a01b03808a16838501528816606083015261ffff87166080830152600084815260cb825292909220815180519293919261135b9284920190611f4e565b5060208281015180516113749260018501920190611f4e565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558616816113d93390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8b8b604051611413929190612250565b60405180910390a461142960cc80546001019055565b505050505050505050565b6097546001600160a01b0316331461145e5760405162461bcd60e51b81526004016105cf9061261c565b6001600160a01b0381166114c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61094681611912565b60006114d782611562565b6114f35760405162461bcd60e51b81526004016105cf906126f9565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061154357506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115b482610a8e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006115f882611562565b6116595760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b600061166483610a8e565b9050806001600160a01b0316846001600160a01b0316148061169f5750836001600160a01b031661169484610567565b6001600160a01b0316145b806116cf57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166116ea82610a8e565b6001600160a01b0316146117525760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b0382166117b45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6117bf60008261157f565b6001600160a01b03831660009081526068602052604081208054600192906117e8908490612796565b90915550506001600160a01b03821660009081526068602052604081208054600192906118169084906127ad565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061188282610a8e565b905061188f60008361157f565b6001600160a01b03811660009081526068602052604081208054600192906118b8908490612796565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061197d575060005460ff16155b6119995760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff161580156119bb576000805461ffff19166101011790555b6119c3611acd565b6119cb611acd565b6119d58383611b37565b8015610705576000805461ff0019169055505050565b600054610100900460ff1680611a04575060005460ff16155b611a205760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff16158015611a42576000805461ffff19166101011790555b611a4a611acd565b611a52611bcc565b8015610946576000805461ff001916905550565b611a718484846116d7565b611a7d84848484611c2c565b61081e5760405162461bcd60e51b81526004016105cf906127c5565b611ab3828260405180602001604052806000815250611d39565b5050565b6000611ac68260c95485611d6c565b9392505050565b600054610100900460ff1680611ae6575060005460ff16155b611b025760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff16158015611a52576000805461ffff19166101011790558015610946576000805461ff001916905550565b600054610100900460ff1680611b50575060005460ff16155b611b6c5760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff16158015611b8e576000805461ffff19166101011790555b8251611ba1906065906020860190611f4e565b508151611bb5906066906020850190611f4e565b508015610705576000805461ff0019169055505050565b600054610100900460ff1680611be5575060005460ff16155b611c015760405162461bcd60e51b81526004016105cf90612748565b600054610100900460ff16158015611c23576000805461ffff19166101011790555b611a5233611912565b60006001600160a01b0384163b15611d2e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c70903390899088908890600401612817565b602060405180830381600087803b158015611c8a57600080fd5b505af1925050508015611cba575060408051601f3d908101601f19168201909252611cb791810190612854565b60015b611d14573d808015611ce8576040519150601f19603f3d011682016040523d82523d6000602084013e611ced565b606091505b508051611d0c5760405162461bcd60e51b81526004016105cf906127c5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506116cf565b506001949350505050565b611d438383611e1b565b611d506000848484611c2c565b6107055760405162461bcd60e51b81526004016105cf906127c5565b600081815b8551811015611e10576000868281518110611d8e57611d8e612871565b60200260200101519050808311611dd0576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611dfd565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611e0881612887565b915050611d71565b509092149392505050565b6001600160a01b038216611e715760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b611e7a81611562565b15611ec75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b0382166000908152606860205260408120805460019290611ef09084906127ad565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611f5a906125e1565b90600052602060002090601f016020900481019282611f7c5760008555611fc2565b82601f10611f9557805160ff1916838001178555611fc2565b82800160010185558215611fc2579182015b82811115611fc2578251825591602001919060010190611fa7565b50611fce929150611fd2565b5090565b5b80821115611fce5760008155600101611fd3565b6001600160e01b03198116811461094657600080fd5b60006020828403121561200f57600080fd5b8135611ac681611fe7565b6000815180845260005b8181101561204057602081850181015186830182015201612024565b81811115612052576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ac6602083018461201a565b60006020828403121561208c57600080fd5b5035919050565b80356001600160a01b03811681146120aa57600080fd5b919050565b600080604083850312156120c257600080fd5b6120cb83612093565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561210a5761210a6120d9565b604051601f8501601f19908116603f01168101908282118183101715612132576121326120d9565b8160405280935085815286868601111561214b57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261217657600080fd5b611ac6838335602085016120ef565b60008060006060848603121561219a57600080fd5b83359250602084013567ffffffffffffffff808211156121b957600080fd5b6121c587838801612165565b935060408601359150808211156121db57600080fd5b506121e886828701612165565b9150509250925092565b60008060006060848603121561220757600080fd5b61221084612093565b925061221e60208501612093565b9150604084013590509250925092565b6000806040838503121561224157600080fd5b50508035926020909101359150565b604081526000612263604083018561201a565b8281036020840152612275818561201a565b95945050505050565b6000806040838503121561229157600080fd5b823591506122a160208401612093565b90509250929050565b6000602082840312156122bc57600080fd5b611ac682612093565b600080604083850312156122d857600080fd5b82359150602083013567ffffffffffffffff8111156122f657600080fd5b61230285828601612165565b9150509250929050565b60008060006060848603121561232157600080fd5b61232a84612093565b9250602084013567ffffffffffffffff808211156121b957600080fd5b6000806040838503121561235a57600080fd5b61236383612093565b91506020830135801515811461237857600080fd5b809150509250929050565b6000806000806080858703121561239957600080fd5b6123a285612093565b93506123b060208601612093565b925060408501359150606085013567ffffffffffffffff8111156123d357600080fd5b8501601f810187136123e457600080fd5b6123f3878235602084016120ef565b91505092959194509250565b803561ffff811681146120aa57600080fd5b60008060008060008060c0878903121561242a57600080fd5b61243387612093565b9550602087013567ffffffffffffffff8082111561245057600080fd5b61245c8a838b01612165565b9650604089013591508082111561247257600080fd5b5061247f89828a01612165565b94505061248e60608801612093565b925061249c60808801612093565b91506124aa60a088016123ff565b90509295509295509295565b60008060008060008060008060e0898b0312156124d257600080fd5b6124db89612093565b9750602089013567ffffffffffffffff808211156124f857600080fd5b6125048c838d01612165565b985060408b013591508082111561251a57600080fd5b6125268c838d01612165565b975061253460608c01612093565b965061254260808c01612093565b955061255060a08c016123ff565b945060c08b013591508082111561256657600080fd5b818b0191508b601f83011261257a57600080fd5b81358181111561258957600080fd5b8c60208260051b850101111561259e57600080fd5b6020830194508093505050509295985092959890939650565b600080604083850312156125ca57600080fd5b6125d383612093565b91506122a160208401612093565b600181811c908216806125f557607f821691505b6020821081141561261657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126d2576126d26126a2565b500290565b6000826126f457634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156127a8576127a86126a2565b500390565b600082198211156127c0576127c06126a2565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061284a9083018461201a565b9695505050505050565b60006020828403121561286657600080fd5b8151611ac681611fe7565b634e487b7160e01b600052603260045260246000fd5b600060001982141561289b5761289b6126a2565b506001019056fea2646970667358221220c10f770c931a07850cb8ce59106fab7259a8bb8041f43a47b01bb6d0749b2bc264736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
