/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506127c280620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806364e9293e11610104578063a22cb465116100a2578063cf11571611610071578063cf1157161461040e578063e985e9c514610421578063f2fde38b1461045d578063fbd8d2831461047057600080fd5b8063a22cb465146103c2578063b88d4fde146103d5578063c87b56dd146103e8578063ce3d22e4146103fb57600080fd5b8063715018a6116100de578063715018a6146103975780638da5cb5b1461039f57806390657147146103a757806395d89b41146103ba57600080fd5b806364e9293e14610350578063669d311c1461037157806370a082311461038457600080fd5b80632a55205a1161017c57806344dcc2321161014b57806344dcc232146103045780634783f0ef14610317578063510b51581461032a5780636352211e1461033d57600080fd5b80632a55205a146102955780632eb4a7ab146102c757806342842e0e146102de57806342966c68146102f157600080fd5b8063095ea7b3116101b8578063095ea7b3146102475780630c0a9d261461025c5780631cbbc6e21461026f57806323b872dd1461028257600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004611f2e565b610483565b60405190151581526020015b60405180910390f35b61020f6104ae565b6040516101fe9190611f98565b61022f61022a366004611fab565b610540565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004611fe0565b6105cd565b005b61020f61026a366004611fab565b6106e3565b61025a61027d3660046120b6565b610788565b61025a610290366004612123565b610802565b6102a86102a336600461215f565b610833565b604080516001600160a01b0390931683526020830191909152016101fe565b6102d060c95481565b6040519081526020016101fe565b61025a6102ec366004612123565b6108aa565b61025a6102ff366004611fab565b6108c5565b61020f610312366004611fab565b610912565b61025a610325366004611fab565b6109ac565b61022f610338366004611fab565b610a16565b61022f61034b366004611fab565b610a5c565b61036361035e366004611fab565b610ad3565b6040516101fe929190612181565b61025a61037f3660046121af565b610c61565b6102d06103923660046121db565b610cc1565b61025a610d48565b61022f610d83565b61025a6103b53660046121f6565b610d9c565b61020f610e33565b61025a6103d0366004612231565b610e42565b61025a6103e336600461226d565b610f07565b61020f6103f6366004611fab565b610f39565b61025a6104093660046122fb565b610f79565b61025a61041c3660046123a0565b611113565b6101f261042f3660046124a1565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61025a61046b3660046121db565b611360565b61022f61047e366004611fab565b6113fd565b600063152a902d60e11b6001600160e01b0319831614806104a857506104a882611443565b92915050565b6060606580546104bd906124cb565b80601f01602080910402602001604051908101604052809291908181526020018280546104e9906124cb565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b5050505050905090565b600061054b82611493565b6105b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d882610a5c565b9050806001600160a01b0316836001600160a01b031614156106465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a8565b336001600160a01b03821614806106625750610662813361042f565b6106d45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a8565b6106de83836114b0565b505050565b600081815260cb60205260409020600101805460609190610703906124cb565b80601f016020809104026020016040519081016040528092919081815260200182805461072f906124cb565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b50505050509050919050565b33610791610d83565b6001600160a01b0316146107b75760405162461bcd60e51b81526004016105a890612506565b600083815260cb6020908152604090912083516107d692850190611e7f565b50600083815260cb6020908152604090912082516107fc92600190920191840190611e7f565b50505050565b61080c338261151e565b6108285760405162461bcd60e51b81526004016105a89061253b565b6106de838383611608565b6000808061083f610d83565b6001600160a01b0316141561086157610856610d83565b6000915091506108a3565b610869610d83565b600085815260cb60205260409020600301546127109061089490600160a01b900461ffff16866125a2565b61089e91906125c1565b915091505b9250929050565b6106de83838360405180602001604052806000815250610f07565b336108ce610d83565b6001600160a01b0316146108f45760405162461bcd60e51b81526004016105a890612506565b6108fd81611493565b61090657600080fd5b61090f816117a8565b50565b60ca602052600090815260409020805461092b906124cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610957906124cb565b80156109a45780601f10610979576101008083540402835291602001916109a4565b820191906000526020600020905b81548152906001019060200180831161098757829003601f168201915b505050505081565b336109b5610d83565b6001600160a01b0316146109db5760405162461bcd60e51b81526004016105a890612506565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6000610a2182611493565b610a3d5760405162461bcd60e51b81526004016105a8906125e3565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104a85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a8565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b06906124cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610b32906124cb565b8015610b7f5780601f10610b5457610100808354040283529160200191610b7f565b820191906000526020600020905b815481529060010190602001808311610b6257829003601f168201915b50505050508152602001600182018054610b98906124cb565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc4906124cb565b8015610c115780601f10610be657610100808354040283529160200191610c11565b820191906000526020600020905b815481529060010190602001808311610bf457829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33610c6a610d83565b6001600160a01b031614610c905760405162461bcd60e51b81526004016105a890612506565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610d2c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a8565b506001600160a01b031660009081526068602052604090205490565b33610d51610d83565b6001600160a01b031614610d775760405162461bcd60e51b81526004016105a890612506565b610d816000611843565b565b6000610d976097546001600160a01b031690565b905090565b600054610100900460ff1680610db5575060005460ff16155b610dd15760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff16158015610df3576000805461ffff19166101011790555b610dfd8383611895565b610e0561191c565b610e0e84611360565b610e1c60cc80546001019055565b80156107fc576000805461ff001916905550505050565b6060606680546104bd906124cb565b6001600160a01b038216331415610e9b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a8565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610f11338361151e565b610f2d5760405162461bcd60e51b81526004016105a89061253b565b6107fc84848484611997565b6060610f4482611493565b610f605760405162461bcd60e51b81526004016105a8906125e3565b600082815260cb602052604090208054610703906124cb565b6127108161ffff1610610fce5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105a8565b6000610fd960cc5490565b9050610fe587826119ca565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb825292909220815180519293919261103c9284920190611e7f565b5060208281015180516110559260018501920190611e7f565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558416816110ba3390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca89896040516110f4929190612181565b60405180910390a461110a60cc80546001019055565b50505050505050565b60408051606087901b6bffffffffffffffffffffffff19166020808301919091528251601481840301815260349092019092528051910120611188908383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506119e892505050565b6111c45760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105a8565b6127108361ffff16106112195760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105a8565b600061122460cc5490565b905061123089826119ca565b6040805160a08101825289815260208082018a90526001600160a01b03808a16838501528816606083015261ffff87166080830152600084815260cb82529290922081518051929391926112879284920190611e7f565b5060208281015180516112a09260018501920190611e7f565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558616816113053390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8b8b60405161133f929190612181565b60405180910390a461135560cc80546001019055565b505050505050505050565b33611369610d83565b6001600160a01b03161461138f5760405162461bcd60e51b81526004016105a890612506565b6001600160a01b0381166113f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a8565b61090f81611843565b600061140882611493565b6114245760405162461bcd60e51b81526004016105a8906125e3565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061147457506001600160e01b03198216635b5e139f60e01b145b806104a857506301ffc9a760e01b6001600160e01b03198316146104a8565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114e582610a5c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061152982611493565b61158a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a8565b600061159583610a5c565b9050806001600160a01b0316846001600160a01b031614806115d05750836001600160a01b03166115c584610540565b6001600160a01b0316145b8061160057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661161b82610a5c565b6001600160a01b0316146116835760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a8565b6001600160a01b0382166116e55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a8565b6116f06000826114b0565b6001600160a01b0383166000908152606860205260408120805460019290611719908490612680565b90915550506001600160a01b0382166000908152606860205260408120805460019290611747908490612697565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006117b382610a5c565b90506117c06000836114b0565b6001600160a01b03811660009081526068602052604081208054600192906117e9908490612680565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806118ae575060005460ff16155b6118ca5760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff161580156118ec576000805461ffff19166101011790555b6118f46119fe565b6118fc6119fe565b6119068383611a68565b80156106de576000805461ff0019169055505050565b600054610100900460ff1680611935575060005460ff16155b6119515760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff16158015611973576000805461ffff19166101011790555b61197b6119fe565b611983611afd565b801561090f576000805461ff001916905550565b6119a2848484611608565b6119ae84848484611b5d565b6107fc5760405162461bcd60e51b81526004016105a8906126af565b6119e4828260405180602001604052806000815250611c6a565b5050565b60006119f78260c95485611c9d565b9392505050565b600054610100900460ff1680611a17575060005460ff16155b611a335760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff16158015611983576000805461ffff1916610101179055801561090f576000805461ff001916905550565b600054610100900460ff1680611a81575060005460ff16155b611a9d5760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff16158015611abf576000805461ffff19166101011790555b8251611ad2906065906020860190611e7f565b508151611ae6906066906020850190611e7f565b5080156106de576000805461ff0019169055505050565b600054610100900460ff1680611b16575060005460ff16155b611b325760405162461bcd60e51b81526004016105a890612632565b600054610100900460ff16158015611b54576000805461ffff19166101011790555b61198333611843565b60006001600160a01b0384163b15611c5f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ba1903390899088908890600401612701565b602060405180830381600087803b158015611bbb57600080fd5b505af1925050508015611beb575060408051601f3d908101601f19168201909252611be89181019061273e565b60015b611c45573d808015611c19576040519150601f19603f3d011682016040523d82523d6000602084013e611c1e565b606091505b508051611c3d5760405162461bcd60e51b81526004016105a8906126af565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611600565b506001949350505050565b611c748383611d4c565b611c816000848484611b5d565b6106de5760405162461bcd60e51b81526004016105a8906126af565b600081815b8551811015611d41576000868281518110611cbf57611cbf61275b565b60200260200101519050808311611d01576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611d2e565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611d3981612771565b915050611ca2565b509092149392505050565b6001600160a01b038216611da25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a8565b611dab81611493565b15611df85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a8565b6001600160a01b0382166000908152606860205260408120805460019290611e21908490612697565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611e8b906124cb565b90600052602060002090601f016020900481019282611ead5760008555611ef3565b82601f10611ec657805160ff1916838001178555611ef3565b82800160010185558215611ef3579182015b82811115611ef3578251825591602001919060010190611ed8565b50611eff929150611f03565b5090565b5b80821115611eff5760008155600101611f04565b6001600160e01b03198116811461090f57600080fd5b600060208284031215611f4057600080fd5b81356119f781611f18565b6000815180845260005b81811015611f7157602081850181015186830182015201611f55565b81811115611f83576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006119f76020830184611f4b565b600060208284031215611fbd57600080fd5b5035919050565b80356001600160a01b0381168114611fdb57600080fd5b919050565b60008060408385031215611ff357600080fd5b611ffc83611fc4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561203b5761203b61200a565b604051601f8501601f19908116603f011681019082821181831017156120635761206361200a565b8160405280935085815286868601111561207c57600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126120a757600080fd5b6119f783833560208501612020565b6000806000606084860312156120cb57600080fd5b83359250602084013567ffffffffffffffff808211156120ea57600080fd5b6120f687838801612096565b9350604086013591508082111561210c57600080fd5b5061211986828701612096565b9150509250925092565b60008060006060848603121561213857600080fd5b61214184611fc4565b925061214f60208501611fc4565b9150604084013590509250925092565b6000806040838503121561217257600080fd5b50508035926020909101359150565b6040815260006121946040830185611f4b565b82810360208401526121a68185611f4b565b95945050505050565b600080604083850312156121c257600080fd5b823591506121d260208401611fc4565b90509250929050565b6000602082840312156121ed57600080fd5b6119f782611fc4565b60008060006060848603121561220b57600080fd5b61221484611fc4565b9250602084013567ffffffffffffffff808211156120ea57600080fd5b6000806040838503121561224457600080fd5b61224d83611fc4565b91506020830135801515811461226257600080fd5b809150509250929050565b6000806000806080858703121561228357600080fd5b61228c85611fc4565b935061229a60208601611fc4565b925060408501359150606085013567ffffffffffffffff8111156122bd57600080fd5b8501601f810187136122ce57600080fd5b6122dd87823560208401612020565b91505092959194509250565b803561ffff81168114611fdb57600080fd5b60008060008060008060c0878903121561231457600080fd5b61231d87611fc4565b9550602087013567ffffffffffffffff8082111561233a57600080fd5b6123468a838b01612096565b9650604089013591508082111561235c57600080fd5b5061236989828a01612096565b94505061237860608801611fc4565b925061238660808801611fc4565b915061239460a088016122e9565b90509295509295509295565b60008060008060008060008060e0898b0312156123bc57600080fd5b6123c589611fc4565b9750602089013567ffffffffffffffff808211156123e257600080fd5b6123ee8c838d01612096565b985060408b013591508082111561240457600080fd5b6124108c838d01612096565b975061241e60608c01611fc4565b965061242c60808c01611fc4565b955061243a60a08c016122e9565b945060c08b013591508082111561245057600080fd5b818b0191508b601f83011261246457600080fd5b81358181111561247357600080fd5b8c60208260051b850101111561248857600080fd5b6020830194508093505050509295985092959890939650565b600080604083850312156124b457600080fd5b6124bd83611fc4565b91506121d260208401611fc4565b600181811c908216806124df57607f821691505b6020821081141561250057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125bc576125bc61258c565b500290565b6000826125de57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156126925761269261258c565b500390565b600082198211156126aa576126aa61258c565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061273490830184611f4b565b9695505050505050565b60006020828403121561275057600080fd5b81516119f781611f18565b634e487b7160e01b600052603260045260246000fd5b60006000198214156127855761278561258c565b506001019056fea26469706673582212209d47faa46b5e997053fcbdfffcb6ce5e8bf94c08b96b267d7157aea1825ecb9764736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
