/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506127d980620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806364e9293e11610104578063a22cb465116100a2578063cf11571611610071578063cf1157161461040e578063e985e9c514610421578063f2fde38b1461045d578063fbd8d2831461047057600080fd5b8063a22cb465146103c2578063b88d4fde146103d5578063c87b56dd146103e8578063ce3d22e4146103fb57600080fd5b8063715018a6116100de578063715018a6146103975780638da5cb5b1461039f57806390657147146103a757806395d89b41146103ba57600080fd5b806364e9293e14610350578063669d311c1461037157806370a082311461038457600080fd5b80632a55205a1161017c57806344dcc2321161014b57806344dcc232146103045780634783f0ef14610317578063510b51581461032a5780636352211e1461033d57600080fd5b80632a55205a146102955780632eb4a7ab146102c757806342842e0e146102de57806342966c68146102f157600080fd5b8063095ea7b3116101b8578063095ea7b3146102475780630c0a9d261461025c5780631cbbc6e21461026f57806323b872dd1461028257600080fd5b806301ffc9a7146101df57806306fdde0314610207578063081812fc1461021c575b600080fd5b6101f26101ed366004611f45565b610483565b60405190151581526020015b60405180910390f35b61020f6104ae565b6040516101fe9190611faf565b61022f61022a366004611fc2565b610540565b6040516001600160a01b0390911681526020016101fe565b61025a610255366004611ff7565b6105cd565b005b61020f61026a366004611fc2565b6106e3565b61025a61027d3660046120cd565b610788565b61025a61029036600461213a565b610802565b6102a86102a3366004612176565b610834565b604080516001600160a01b0390931683526020830191909152016101fe565b6102d060c95481565b6040519081526020016101fe565b61025a6102ec36600461213a565b6108ab565b61025a6102ff366004611fc2565b6108c6565b61020f610312366004611fc2565b610929565b61025a610325366004611fc2565b6109c3565b61022f610338366004611fc2565b610a2d565b61022f61034b366004611fc2565b610a73565b61036361035e366004611fc2565b610aea565b6040516101fe929190612198565b61025a61037f3660046121c6565b610c78565b6102d06103923660046121f2565b610cd8565b61025a610d5f565b61022f610d9a565b61025a6103b536600461220d565b610db3565b61020f610e4a565b61025a6103d0366004612248565b610e59565b61025a6103e3366004612284565b610f1e565b61020f6103f6366004611fc2565b610f50565b61025a610409366004612312565b610f90565b61025a61041c3660046123b7565b61112a565b6101f261042f3660046124b8565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61025a61046b3660046121f2565b611377565b61022f61047e366004611fc2565b611414565b600063152a902d60e11b6001600160e01b0319831614806104a857506104a88261145a565b92915050565b6060606580546104bd906124e2565b80601f01602080910402602001604051908101604052809291908181526020018280546104e9906124e2565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b5050505050905090565b600061054b826114aa565b6105b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d882610a73565b9050806001600160a01b0316836001600160a01b031614156106465760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a8565b336001600160a01b03821614806106625750610662813361042f565b6106d45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a8565b6106de83836114c7565b505050565b600081815260cb60205260409020600101805460609190610703906124e2565b80601f016020809104026020016040519081016040528092919081815260200182805461072f906124e2565b801561077c5780601f106107515761010080835404028352916020019161077c565b820191906000526020600020905b81548152906001019060200180831161075f57829003601f168201915b50505050509050919050565b33610791610d9a565b6001600160a01b0316146107b75760405162461bcd60e51b81526004016105a89061251d565b600083815260cb6020908152604090912083516107d692850190611e96565b50600083815260cb6020908152604090912082516107fc92600190920191840190611e96565b50505050565b61080d335b82611535565b6108295760405162461bcd60e51b81526004016105a890612552565b6106de83838361161f565b60008080610840610d9a565b6001600160a01b0316141561086257610857610d9a565b6000915091506108a4565b61086a610d9a565b600085815260cb60205260409020600301546127109061089590600160a01b900461ffff16866125b9565b61089f91906125d8565b915091505b9250929050565b6106de83838360405180602001604052806000815250610f1e565b6108cf816114aa565b6108d857600080fd5b6108e133610807565b61091d5760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105a8565b610926816117bf565b50565b60ca6020526000908152604090208054610942906124e2565b80601f016020809104026020016040519081016040528092919081815260200182805461096e906124e2565b80156109bb5780601f10610990576101008083540402835291602001916109bb565b820191906000526020600020905b81548152906001019060200180831161099e57829003601f168201915b505050505081565b336109cc610d9a565b6001600160a01b0316146109f25760405162461bcd60e51b81526004016105a89061251d565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6000610a38826114aa565b610a545760405162461bcd60e51b81526004016105a8906125fa565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104a85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a8565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b1d906124e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610b49906124e2565b8015610b965780601f10610b6b57610100808354040283529160200191610b96565b820191906000526020600020905b815481529060010190602001808311610b7957829003601f168201915b50505050508152602001600182018054610baf906124e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdb906124e2565b8015610c285780601f10610bfd57610100808354040283529160200191610c28565b820191906000526020600020905b815481529060010190602001808311610c0b57829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33610c81610d9a565b6001600160a01b031614610ca75760405162461bcd60e51b81526004016105a89061251d565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610d435760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a8565b506001600160a01b031660009081526068602052604090205490565b33610d68610d9a565b6001600160a01b031614610d8e5760405162461bcd60e51b81526004016105a89061251d565b610d98600061185a565b565b6000610dae6097546001600160a01b031690565b905090565b600054610100900460ff1680610dcc575060005460ff16155b610de85760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff16158015610e0a576000805461ffff19166101011790555b610e1483836118ac565b610e1c611933565b610e2584611377565b610e3360cc80546001019055565b80156107fc576000805461ff001916905550505050565b6060606680546104bd906124e2565b6001600160a01b038216331415610eb25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a8565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610f283383611535565b610f445760405162461bcd60e51b81526004016105a890612552565b6107fc848484846119ae565b6060610f5b826114aa565b610f775760405162461bcd60e51b81526004016105a8906125fa565b600082815260cb602052604090208054610703906124e2565b6127108161ffff1610610fe55760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105a8565b6000610ff060cc5490565b9050610ffc87826119e1565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb82529290922081518051929391926110539284920190611e96565b50602082810151805161106c9260018501920190611e96565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558416816110d13390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca898960405161110b929190612198565b60405180910390a461112160cc80546001019055565b50505050505050565b60408051606087901b6bffffffffffffffffffffffff1916602080830191909152825160148184030181526034909201909252805191012061119f908383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506119ff92505050565b6111db5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105a8565b6127108361ffff16106112305760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105a8565b600061123b60cc5490565b905061124789826119e1565b6040805160a08101825289815260208082018a90526001600160a01b03808a16838501528816606083015261ffff87166080830152600084815260cb825292909220815180519293919261129e9284920190611e96565b5060208281015180516112b79260018501920190611e96565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b03199094169282169290921792909217905586168161131c3390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8b8b604051611356929190612198565b60405180910390a461136c60cc80546001019055565b505050505050505050565b33611380610d9a565b6001600160a01b0316146113a65760405162461bcd60e51b81526004016105a89061251d565b6001600160a01b03811661140b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a8565b6109268161185a565b600061141f826114aa565b61143b5760405162461bcd60e51b81526004016105a8906125fa565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061148b57506001600160e01b03198216635b5e139f60e01b145b806104a857506301ffc9a760e01b6001600160e01b03198316146104a8565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114fc82610a73565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000611540826114aa565b6115a15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a8565b60006115ac83610a73565b9050806001600160a01b0316846001600160a01b031614806115e75750836001600160a01b03166115dc84610540565b6001600160a01b0316145b8061161757506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661163282610a73565b6001600160a01b03161461169a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a8565b6001600160a01b0382166116fc5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a8565b6117076000826114c7565b6001600160a01b0383166000908152606860205260408120805460019290611730908490612697565b90915550506001600160a01b038216600090815260686020526040812080546001929061175e9084906126ae565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006117ca82610a73565b90506117d76000836114c7565b6001600160a01b0381166000908152606860205260408120805460019290611800908490612697565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806118c5575060005460ff16155b6118e15760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff16158015611903576000805461ffff19166101011790555b61190b611a15565b611913611a15565b61191d8383611a7f565b80156106de576000805461ff0019169055505050565b600054610100900460ff168061194c575060005460ff16155b6119685760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff1615801561198a576000805461ffff19166101011790555b611992611a15565b61199a611b14565b8015610926576000805461ff001916905550565b6119b984848461161f565b6119c584848484611b74565b6107fc5760405162461bcd60e51b81526004016105a8906126c6565b6119fb828260405180602001604052806000815250611c81565b5050565b6000611a0e8260c95485611cb4565b9392505050565b600054610100900460ff1680611a2e575060005460ff16155b611a4a5760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff1615801561199a576000805461ffff19166101011790558015610926576000805461ff001916905550565b600054610100900460ff1680611a98575060005460ff16155b611ab45760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff16158015611ad6576000805461ffff19166101011790555b8251611ae9906065906020860190611e96565b508151611afd906066906020850190611e96565b5080156106de576000805461ff0019169055505050565b600054610100900460ff1680611b2d575060005460ff16155b611b495760405162461bcd60e51b81526004016105a890612649565b600054610100900460ff16158015611b6b576000805461ffff19166101011790555b61199a3361185a565b60006001600160a01b0384163b15611c7657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611bb8903390899088908890600401612718565b602060405180830381600087803b158015611bd257600080fd5b505af1925050508015611c02575060408051601f3d908101601f19168201909252611bff91810190612755565b60015b611c5c573d808015611c30576040519150601f19603f3d011682016040523d82523d6000602084013e611c35565b606091505b508051611c545760405162461bcd60e51b81526004016105a8906126c6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611617565b506001949350505050565b611c8b8383611d63565b611c986000848484611b74565b6106de5760405162461bcd60e51b81526004016105a8906126c6565b600081815b8551811015611d58576000868281518110611cd657611cd6612772565b60200260200101519050808311611d18576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611d45565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611d5081612788565b915050611cb9565b509092149392505050565b6001600160a01b038216611db95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a8565b611dc2816114aa565b15611e0f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a8565b6001600160a01b0382166000908152606860205260408120805460019290611e389084906126ae565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611ea2906124e2565b90600052602060002090601f016020900481019282611ec45760008555611f0a565b82601f10611edd57805160ff1916838001178555611f0a565b82800160010185558215611f0a579182015b82811115611f0a578251825591602001919060010190611eef565b50611f16929150611f1a565b5090565b5b80821115611f165760008155600101611f1b565b6001600160e01b03198116811461092657600080fd5b600060208284031215611f5757600080fd5b8135611a0e81611f2f565b6000815180845260005b81811015611f8857602081850181015186830182015201611f6c565b81811115611f9a576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a0e6020830184611f62565b600060208284031215611fd457600080fd5b5035919050565b80356001600160a01b0381168114611ff257600080fd5b919050565b6000806040838503121561200a57600080fd5b61201383611fdb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561205257612052612021565b604051601f8501601f19908116603f0116810190828211818310171561207a5761207a612021565b8160405280935085815286868601111561209357600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126120be57600080fd5b611a0e83833560208501612037565b6000806000606084860312156120e257600080fd5b83359250602084013567ffffffffffffffff8082111561210157600080fd5b61210d878388016120ad565b9350604086013591508082111561212357600080fd5b50612130868287016120ad565b9150509250925092565b60008060006060848603121561214f57600080fd5b61215884611fdb565b925061216660208501611fdb565b9150604084013590509250925092565b6000806040838503121561218957600080fd5b50508035926020909101359150565b6040815260006121ab6040830185611f62565b82810360208401526121bd8185611f62565b95945050505050565b600080604083850312156121d957600080fd5b823591506121e960208401611fdb565b90509250929050565b60006020828403121561220457600080fd5b611a0e82611fdb565b60008060006060848603121561222257600080fd5b61222b84611fdb565b9250602084013567ffffffffffffffff8082111561210157600080fd5b6000806040838503121561225b57600080fd5b61226483611fdb565b91506020830135801515811461227957600080fd5b809150509250929050565b6000806000806080858703121561229a57600080fd5b6122a385611fdb565b93506122b160208601611fdb565b925060408501359150606085013567ffffffffffffffff8111156122d457600080fd5b8501601f810187136122e557600080fd5b6122f487823560208401612037565b91505092959194509250565b803561ffff81168114611ff257600080fd5b60008060008060008060c0878903121561232b57600080fd5b61233487611fdb565b9550602087013567ffffffffffffffff8082111561235157600080fd5b61235d8a838b016120ad565b9650604089013591508082111561237357600080fd5b5061238089828a016120ad565b94505061238f60608801611fdb565b925061239d60808801611fdb565b91506123ab60a08801612300565b90509295509295509295565b60008060008060008060008060e0898b0312156123d357600080fd5b6123dc89611fdb565b9750602089013567ffffffffffffffff808211156123f957600080fd5b6124058c838d016120ad565b985060408b013591508082111561241b57600080fd5b6124278c838d016120ad565b975061243560608c01611fdb565b965061244360808c01611fdb565b955061245160a08c01612300565b945060c08b013591508082111561246757600080fd5b818b0191508b601f83011261247b57600080fd5b81358181111561248a57600080fd5b8c60208260051b850101111561249f57600080fd5b6020830194508093505050509295985092959890939650565b600080604083850312156124cb57600080fd5b6124d483611fdb565b91506121e960208401611fdb565b600181811c908216806124f657607f821691505b6020821081141561251757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125d3576125d36125a3565b500290565b6000826125f557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156126a9576126a96125a3565b500390565b600082198211156126c1576126c16125a3565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061274b90830184611f62565b9695505050505050565b60006020828403121561276757600080fd5b8151611a0e81611f2f565b634e487b7160e01b600052603260045260246000fd5b600060001982141561279c5761279c6125a3565b506001019056fea264697066735822122071cbe40aa1e177672866ac4c2b7e703fa083b885198ea9793a22f4cc82045bcb64736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
