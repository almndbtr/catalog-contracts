/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506122cb806100d56000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806364e9293e116100f9578063a22cb46511610097578063ce3d22e411610071578063ce3d22e4146103ae578063e985e9c5146103c1578063f2fde38b146103fd578063fbd8d2831461041057600080fd5b8063a22cb46514610375578063b88d4fde14610388578063c87b56dd1461039b57600080fd5b8063715018a6116100d3578063715018a61461034a5780638da5cb5b14610352578063906571471461035a57806395d89b411461036d57600080fd5b806364e9293e146102f5578063669d311c1461031657806370a082311461032957600080fd5b806323b872dd1161016657806342966c681161014057806342966c68146102a957806344dcc232146102bc578063510b5158146102cf5780636352211e146102e257600080fd5b806323b872dd146102515780632a55205a1461026457806342842e0e1461029657600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b3146102165780630c0a9d261461022b5780631cbbc6e21461023e575b600080fd5b6101c16101bc366004611b69565b610423565b60405190151581526020015b60405180910390f35b6101de61044e565b6040516101cd9190611bda565b6101fe6101f9366004611bed565b6104e0565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611c22565b61056d565b005b6101de610239366004611bed565b610683565b61022961024c366004611cf8565b610728565b61022961025f366004611d65565b6107a2565b610277610272366004611da1565b6107d4565b604080516001600160a01b0390931683526020830191909152016101cd565b6102296102a4366004611d65565b61084b565b6102296102b7366004611bed565b610866565b6101de6102ca366004611bed565b6108c9565b6101fe6102dd366004611bed565b610963565b6101fe6102f0366004611bed565b6109a9565b610308610303366004611bed565b610a20565b6040516101cd929190611dc3565b610229610324366004611df1565b610bae565b61033c610337366004611e1d565b610c0e565b6040519081526020016101cd565b610229610c95565b6101fe610cd0565b610229610368366004611e38565b610ce9565b6101de610d80565b610229610383366004611e73565b610d8f565b610229610396366004611eaf565b610e54565b6101de6103a9366004611bed565b610e86565b6102296103bc366004611f2b565b610ec6565b6101c16103cf366004611fdb565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61022961040b366004611e1d565b611060565b6101fe61041e366004611bed565b6110fd565b600063152a902d60e11b6001600160e01b031983161480610448575061044882611143565b92915050565b60606065805461045d90612005565b80601f016020809104026020016040519081016040528092919081815260200182805461048990612005565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104eb82611193565b6105515760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b6000610578826109a9565b9050806001600160a01b0316836001600160a01b031614156105e65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610548565b336001600160a01b0382161480610602575061060281336103cf565b6106745760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610548565b61067e83836111b0565b505050565b600081815260ca602052604090206001018054606091906106a390612005565b80601f01602080910402602001604051908101604052809291908181526020018280546106cf90612005565b801561071c5780601f106106f15761010080835404028352916020019161071c565b820191906000526020600020905b8154815290600101906020018083116106ff57829003601f168201915b50505050509050919050565b33610731610cd0565b6001600160a01b0316146107575760405162461bcd60e51b815260040161054890612040565b600083815260ca60209081526040909120835161077692850190611aba565b50600083815260ca60209081526040909120825161079c92600190920191840190611aba565b50505050565b6107ad335b8261121e565b6107c95760405162461bcd60e51b815260040161054890612075565b61067e838383611308565b600080806107e0610cd0565b6001600160a01b03161415610802576107f7610cd0565b600091509150610844565b61080a610cd0565b600085815260ca60205260409020600301546127109061083590600160a01b900461ffff16866120dc565b61083f91906120fb565b915091505b9250929050565b61067e83838360405180602001604052806000815250610e54565b61086f81611193565b61087857600080fd5b610881336107a7565b6108bd5760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b6044820152606401610548565b6108c6816114a8565b50565b60c960205260009081526040902080546108e290612005565b80601f016020809104026020016040519081016040528092919081815260200182805461090e90612005565b801561095b5780601f106109305761010080835404028352916020019161095b565b820191906000526020600020905b81548152906001019060200180831161093e57829003601f168201915b505050505081565b600061096e82611193565b61098a5760405162461bcd60e51b81526004016105489061211d565b50600090815260ca60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104485760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610548565b606080600060ca60008581526020019081526020016000206040518060a0016040529081600082018054610a5390612005565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7f90612005565b8015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b50505050508152602001600182018054610ae590612005565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1190612005565b8015610b5e5780601f10610b3357610100808354040283529160200191610b5e565b820191906000526020600020905b815481529060010190602001808311610b4157829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33610bb7610cd0565b6001600160a01b031614610bdd5760405162461bcd60e51b815260040161054890612040565b600091825260ca602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610c795760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610548565b506001600160a01b031660009081526068602052604090205490565b33610c9e610cd0565b6001600160a01b031614610cc45760405162461bcd60e51b815260040161054890612040565b610cce6000611543565b565b6000610ce46097546001600160a01b031690565b905090565b600054610100900460ff1680610d02575060005460ff16155b610d1e5760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff16158015610d40576000805461ffff19166101011790555b610d4a8383611595565b610d5261161c565b610d5b84611060565b610d6960cb80546001019055565b801561079c576000805461ff001916905550505050565b60606066805461045d90612005565b6001600160a01b038216331415610de85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610548565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e5e338361121e565b610e7a5760405162461bcd60e51b815260040161054890612075565b61079c84848484611697565b6060610e9182611193565b610ead5760405162461bcd60e51b81526004016105489061211d565b600082815260ca6020526040902080546106a390612005565b6127108161ffff1610610f1b5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e21000000006044820152606401610548565b6000610f2660cb5490565b9050610f3287826116ca565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260ca8252929092208151805192939192610f899284920190611aba565b506020828101518051610fa29260018501920190611aba565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558416816110073390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8989604051611041929190611dc3565b60405180910390a461105760cb80546001019055565b50505050505050565b33611069610cd0565b6001600160a01b03161461108f5760405162461bcd60e51b815260040161054890612040565b6001600160a01b0381166110f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610548565b6108c681611543565b600061110882611193565b6111245760405162461bcd60e51b81526004016105489061211d565b50600090815260ca60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061117457506001600160e01b03198216635b5e139f60e01b145b8061044857506301ffc9a760e01b6001600160e01b0319831614610448565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111e5826109a9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061122982611193565b61128a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610548565b6000611295836109a9565b9050806001600160a01b0316846001600160a01b031614806112d05750836001600160a01b03166112c5846104e0565b6001600160a01b0316145b8061130057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661131b826109a9565b6001600160a01b0316146113835760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610548565b6001600160a01b0382166113e55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610548565b6113f06000826111b0565b6001600160a01b03831660009081526068602052604081208054600192906114199084906121ba565b90915550506001600160a01b03821660009081526068602052604081208054600192906114479084906121d1565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006114b3826109a9565b90506114c06000836111b0565b6001600160a01b03811660009081526068602052604081208054600192906114e99084906121ba565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806115ae575060005460ff16155b6115ca5760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff161580156115ec576000805461ffff19166101011790555b6115f46116e8565b6115fc6116e8565b6116068383611752565b801561067e576000805461ff0019169055505050565b600054610100900460ff1680611635575060005460ff16155b6116515760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff16158015611673576000805461ffff19166101011790555b61167b6116e8565b6116836117e7565b80156108c6576000805461ff001916905550565b6116a2848484611308565b6116ae84848484611847565b61079c5760405162461bcd60e51b8152600401610548906121e9565b6116e4828260405180602001604052806000815250611954565b5050565b600054610100900460ff1680611701575060005460ff16155b61171d5760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff16158015611683576000805461ffff191661010117905580156108c6576000805461ff001916905550565b600054610100900460ff168061176b575060005460ff16155b6117875760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff161580156117a9576000805461ffff19166101011790555b82516117bc906065906020860190611aba565b5081516117d0906066906020850190611aba565b50801561067e576000805461ff0019169055505050565b600054610100900460ff1680611800575060005460ff16155b61181c5760405162461bcd60e51b81526004016105489061216c565b600054610100900460ff1615801561183e576000805461ffff19166101011790555b61168333611543565b60006001600160a01b0384163b1561194957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061188b90339089908890889060040161223b565b602060405180830381600087803b1580156118a557600080fd5b505af19250505080156118d5575060408051601f3d908101601f191682019092526118d291810190612278565b60015b61192f573d808015611903576040519150601f19603f3d011682016040523d82523d6000602084013e611908565b606091505b5080516119275760405162461bcd60e51b8152600401610548906121e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611300565b506001949350505050565b61195e8383611987565b61196b6000848484611847565b61067e5760405162461bcd60e51b8152600401610548906121e9565b6001600160a01b0382166119dd5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610548565b6119e681611193565b15611a335760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610548565b6001600160a01b0382166000908152606860205260408120805460019290611a5c9084906121d1565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611ac690612005565b90600052602060002090601f016020900481019282611ae85760008555611b2e565b82601f10611b0157805160ff1916838001178555611b2e565b82800160010185558215611b2e579182015b82811115611b2e578251825591602001919060010190611b13565b50611b3a929150611b3e565b5090565b5b80821115611b3a5760008155600101611b3f565b6001600160e01b0319811681146108c657600080fd5b600060208284031215611b7b57600080fd5b8135611b8681611b53565b9392505050565b6000815180845260005b81811015611bb357602081850181015186830182015201611b97565b81811115611bc5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611b866020830184611b8d565b600060208284031215611bff57600080fd5b5035919050565b80356001600160a01b0381168114611c1d57600080fd5b919050565b60008060408385031215611c3557600080fd5b611c3e83611c06565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611c7d57611c7d611c4c565b604051601f8501601f19908116603f01168101908282118183101715611ca557611ca5611c4c565b81604052809350858152868686011115611cbe57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611ce957600080fd5b611b8683833560208501611c62565b600080600060608486031215611d0d57600080fd5b83359250602084013567ffffffffffffffff80821115611d2c57600080fd5b611d3887838801611cd8565b93506040860135915080821115611d4e57600080fd5b50611d5b86828701611cd8565b9150509250925092565b600080600060608486031215611d7a57600080fd5b611d8384611c06565b9250611d9160208501611c06565b9150604084013590509250925092565b60008060408385031215611db457600080fd5b50508035926020909101359150565b604081526000611dd66040830185611b8d565b8281036020840152611de88185611b8d565b95945050505050565b60008060408385031215611e0457600080fd5b82359150611e1460208401611c06565b90509250929050565b600060208284031215611e2f57600080fd5b611b8682611c06565b600080600060608486031215611e4d57600080fd5b611e5684611c06565b9250602084013567ffffffffffffffff80821115611d2c57600080fd5b60008060408385031215611e8657600080fd5b611e8f83611c06565b915060208301358015158114611ea457600080fd5b809150509250929050565b60008060008060808587031215611ec557600080fd5b611ece85611c06565b9350611edc60208601611c06565b925060408501359150606085013567ffffffffffffffff811115611eff57600080fd5b8501601f81018713611f1057600080fd5b611f1f87823560208401611c62565b91505092959194509250565b60008060008060008060c08789031215611f4457600080fd5b611f4d87611c06565b9550602087013567ffffffffffffffff80821115611f6a57600080fd5b611f768a838b01611cd8565b96506040890135915080821115611f8c57600080fd5b50611f9989828a01611cd8565b945050611fa860608801611c06565b9250611fb660808801611c06565b915060a087013561ffff81168114611fcd57600080fd5b809150509295509295509295565b60008060408385031215611fee57600080fd5b611ff783611c06565b9150611e1460208401611c06565b600181811c9082168061201957607f821691505b6020821081141561203a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156120f6576120f66120c6565b500290565b60008261211857634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156121cc576121cc6120c6565b500390565b600082198211156121e4576121e46120c6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061226e90830184611b8d565b9695505050505050565b60006020828403121561228a57600080fd5b8151611b8681611b5356fea2646970667358221220620cecf0e0136b62a902ded566abcb5043389d2c1f1df07db7a858db6f6e8b5564736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
