/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b50612257806100d56000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806364e9293e116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610380578063ce3d22e414610393578063e985e9c5146103a6578063f2fde38b146103e257600080fd5b806395d89b4114610352578063a22cb4651461035a578063b88d4fde1461036d57600080fd5b806364e9293e146102da578063669d311c146102fb57806370a082311461030e578063715018a61461032f5780638da5cb5b14610337578063906571471461033f57600080fd5b806323b872dd1161014b57806342966c681161012557806342966c681461028e57806344dcc232146102a1578063510b5158146102b45780636352211e146102c757600080fd5b806323b872dd146102365780632a55205a1461024957806342842e0e1461027b57600080fd5b806301ffc9a71461019357806306fdde03146101bb578063081812fc146101d0578063095ea7b3146101fb5780630c0a9d26146102105780631cbbc6e214610223575b600080fd5b6101a66101a1366004611af5565b6103f5565b60405190151581526020015b60405180910390f35b6101c3610420565b6040516101b29190611b66565b6101e36101de366004611b79565b6104b2565b6040516001600160a01b0390911681526020016101b2565b61020e610209366004611bae565b61053f565b005b6101c361021e366004611b79565b610655565b61020e610231366004611c84565b6106fa565b61020e610244366004611cf1565b610774565b61025c610257366004611d2d565b6107a6565b604080516001600160a01b0390931683526020830191909152016101b2565b61020e610289366004611cf1565b61081d565b61020e61029c366004611b79565b610838565b6101c36102af366004611b79565b61089b565b6101e36102c2366004611b79565b610935565b6101e36102d5366004611b79565b61097b565b6102ed6102e8366004611b79565b6109f2565b6040516101b2929190611d4f565b61020e610309366004611d7d565b610b80565b61032161031c366004611da9565b610be0565b6040519081526020016101b2565b61020e610c67565b6101e3610ca2565b61020e61034d366004611dc4565b610cbb565b6101c3610d52565b61020e610368366004611dff565b610d61565b61020e61037b366004611e3b565b610e26565b6101c361038e366004611b79565b610e58565b61020e6103a1366004611eb7565b610e98565b6101a66103b4366004611f67565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61020e6103f0366004611da9565b611032565b600063152a902d60e11b6001600160e01b03198316148061041a575061041a826110cf565b92915050565b60606065805461042f90611f91565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611f91565b80156104a85780601f1061047d576101008083540402835291602001916104a8565b820191906000526020600020905b81548152906001019060200180831161048b57829003601f168201915b5050505050905090565b60006104bd8261111f565b6105235760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061054a8261097b565b9050806001600160a01b0316836001600160a01b031614156105b85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161051a565b336001600160a01b03821614806105d457506105d481336103b4565b6106465760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161051a565b610650838361113c565b505050565b600081815260ca6020526040902060010180546060919061067590611f91565b80601f01602080910402602001604051908101604052809291908181526020018280546106a190611f91565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505050509050919050565b33610703610ca2565b6001600160a01b0316146107295760405162461bcd60e51b815260040161051a90611fcc565b600083815260ca60209081526040909120835161074892850190611a46565b50600083815260ca60209081526040909120825161076e92600190920191840190611a46565b50505050565b61077f335b826111aa565b61079b5760405162461bcd60e51b815260040161051a90612001565b610650838383611294565b600080806107b2610ca2565b6001600160a01b031614156107d4576107c9610ca2565b600091509150610816565b6107dc610ca2565b600085815260ca60205260409020600301546127109061080790600160a01b900461ffff1686612068565b6108119190612087565b915091505b9250929050565b61065083838360405180602001604052806000815250610e26565b6108418161111f565b61084a57600080fd5b61085333610779565b61088f5760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b604482015260640161051a565b61089881611434565b50565b60c960205260009081526040902080546108b490611f91565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090611f91565b801561092d5780601f106109025761010080835404028352916020019161092d565b820191906000526020600020905b81548152906001019060200180831161091057829003601f168201915b505050505081565b60006109408261111f565b61095c5760405162461bcd60e51b815260040161051a906120a9565b50600090815260ca60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b03168061041a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161051a565b606080600060ca60008581526020019081526020016000206040518060a0016040529081600082018054610a2590611f91565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5190611f91565b8015610a9e5780601f10610a7357610100808354040283529160200191610a9e565b820191906000526020600020905b815481529060010190602001808311610a8157829003601f168201915b50505050508152602001600182018054610ab790611f91565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390611f91565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33610b89610ca2565b6001600160a01b031614610baf5760405162461bcd60e51b815260040161051a90611fcc565b600091825260ca602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610c4b5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161051a565b506001600160a01b031660009081526068602052604090205490565b33610c70610ca2565b6001600160a01b031614610c965760405162461bcd60e51b815260040161051a90611fcc565b610ca060006114cf565b565b6000610cb66097546001600160a01b031690565b905090565b600054610100900460ff1680610cd4575060005460ff16155b610cf05760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff16158015610d12576000805461ffff19166101011790555b610d1c8383611521565b610d246115a8565b610d2d84611032565b610d3b60cb80546001019055565b801561076e576000805461ff001916905550505050565b60606066805461042f90611f91565b6001600160a01b038216331415610dba5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161051a565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e3033836111aa565b610e4c5760405162461bcd60e51b815260040161051a90612001565b61076e84848484611623565b6060610e638261111f565b610e7f5760405162461bcd60e51b815260040161051a906120a9565b600082815260ca60205260409020805461067590611f91565b6127108161ffff1610610eed5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e2100000000604482015260640161051a565b6000610ef860cb5490565b9050610f048782611656565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260ca8252929092208151805192939192610f5b9284920190611a46565b506020828101518051610f749260018501920190611a46565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b031990941692821692909217929092179055841681610fd93390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8989604051611013929190611d4f565b60405180910390a461102960cb80546001019055565b50505050505050565b3361103b610ca2565b6001600160a01b0316146110615760405162461bcd60e51b815260040161051a90611fcc565b6001600160a01b0381166110c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161051a565b610898816114cf565b60006001600160e01b031982166380ac58cd60e01b148061110057506001600160e01b03198216635b5e139f60e01b145b8061041a57506301ffc9a760e01b6001600160e01b031983161461041a565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111718261097b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006111b58261111f565b6112165760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161051a565b60006112218361097b565b9050806001600160a01b0316846001600160a01b0316148061125c5750836001600160a01b0316611251846104b2565b6001600160a01b0316145b8061128c57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166112a78261097b565b6001600160a01b03161461130f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161051a565b6001600160a01b0382166113715760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161051a565b61137c60008261113c565b6001600160a01b03831660009081526068602052604081208054600192906113a5908490612146565b90915550506001600160a01b03821660009081526068602052604081208054600192906113d390849061215d565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061143f8261097b565b905061144c60008361113c565b6001600160a01b0381166000908152606860205260408120805460019290611475908490612146565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061153a575060005460ff16155b6115565760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff16158015611578576000805461ffff19166101011790555b611580611674565b611588611674565b61159283836116de565b8015610650576000805461ff0019169055505050565b600054610100900460ff16806115c1575060005460ff16155b6115dd5760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff161580156115ff576000805461ffff19166101011790555b611607611674565b61160f611773565b8015610898576000805461ff001916905550565b61162e848484611294565b61163a848484846117d3565b61076e5760405162461bcd60e51b815260040161051a90612175565b6116708282604051806020016040528060008152506118e0565b5050565b600054610100900460ff168061168d575060005460ff16155b6116a95760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff1615801561160f576000805461ffff19166101011790558015610898576000805461ff001916905550565b600054610100900460ff16806116f7575060005460ff16155b6117135760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff16158015611735576000805461ffff19166101011790555b8251611748906065906020860190611a46565b50815161175c906066906020850190611a46565b508015610650576000805461ff0019169055505050565b600054610100900460ff168061178c575060005460ff16155b6117a85760405162461bcd60e51b815260040161051a906120f8565b600054610100900460ff161580156117ca576000805461ffff19166101011790555b61160f336114cf565b60006001600160a01b0384163b156118d557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118179033908990889088906004016121c7565b602060405180830381600087803b15801561183157600080fd5b505af1925050508015611861575060408051601f3d908101601f1916820190925261185e91810190612204565b60015b6118bb573d80801561188f576040519150601f19603f3d011682016040523d82523d6000602084013e611894565b606091505b5080516118b35760405162461bcd60e51b815260040161051a90612175565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061128c565b506001949350505050565b6118ea8383611913565b6118f760008484846117d3565b6106505760405162461bcd60e51b815260040161051a90612175565b6001600160a01b0382166119695760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161051a565b6119728161111f565b156119bf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051a565b6001600160a01b03821660009081526068602052604081208054600192906119e890849061215d565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611a5290611f91565b90600052602060002090601f016020900481019282611a745760008555611aba565b82601f10611a8d57805160ff1916838001178555611aba565b82800160010185558215611aba579182015b82811115611aba578251825591602001919060010190611a9f565b50611ac6929150611aca565b5090565b5b80821115611ac65760008155600101611acb565b6001600160e01b03198116811461089857600080fd5b600060208284031215611b0757600080fd5b8135611b1281611adf565b9392505050565b6000815180845260005b81811015611b3f57602081850181015186830182015201611b23565b81811115611b51576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611b126020830184611b19565b600060208284031215611b8b57600080fd5b5035919050565b80356001600160a01b0381168114611ba957600080fd5b919050565b60008060408385031215611bc157600080fd5b611bca83611b92565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611c0957611c09611bd8565b604051601f8501601f19908116603f01168101908282118183101715611c3157611c31611bd8565b81604052809350858152868686011115611c4a57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611c7557600080fd5b611b1283833560208501611bee565b600080600060608486031215611c9957600080fd5b83359250602084013567ffffffffffffffff80821115611cb857600080fd5b611cc487838801611c64565b93506040860135915080821115611cda57600080fd5b50611ce786828701611c64565b9150509250925092565b600080600060608486031215611d0657600080fd5b611d0f84611b92565b9250611d1d60208501611b92565b9150604084013590509250925092565b60008060408385031215611d4057600080fd5b50508035926020909101359150565b604081526000611d626040830185611b19565b8281036020840152611d748185611b19565b95945050505050565b60008060408385031215611d9057600080fd5b82359150611da060208401611b92565b90509250929050565b600060208284031215611dbb57600080fd5b611b1282611b92565b600080600060608486031215611dd957600080fd5b611de284611b92565b9250602084013567ffffffffffffffff80821115611cb857600080fd5b60008060408385031215611e1257600080fd5b611e1b83611b92565b915060208301358015158114611e3057600080fd5b809150509250929050565b60008060008060808587031215611e5157600080fd5b611e5a85611b92565b9350611e6860208601611b92565b925060408501359150606085013567ffffffffffffffff811115611e8b57600080fd5b8501601f81018713611e9c57600080fd5b611eab87823560208401611bee565b91505092959194509250565b60008060008060008060c08789031215611ed057600080fd5b611ed987611b92565b9550602087013567ffffffffffffffff80821115611ef657600080fd5b611f028a838b01611c64565b96506040890135915080821115611f1857600080fd5b50611f2589828a01611c64565b945050611f3460608801611b92565b9250611f4260808801611b92565b915060a087013561ffff81168114611f5957600080fd5b809150509295509295509295565b60008060408385031215611f7a57600080fd5b611f8383611b92565b9150611da060208401611b92565b600181811c90821680611fa557607f821691505b60208210811415611fc657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561208257612082612052565b500290565b6000826120a457634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008282101561215857612158612052565b500390565b6000821982111561217057612170612052565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121fa90830184611b19565b9695505050505050565b60006020828403121561221657600080fd5b8151611b1281611adf56fea26469706673582212208d05e8f90abaf3087ceb95aa582521cd93d84cd0d489e9cb42b868f414d9c2fc64736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
