/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RoyaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintAllowlist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612ad3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063510b51581161010f5780638fe86b3f116100a2578063c87b56dd11610071578063c87b56dd14610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b80638fe86b3f146103f457806395d89b4114610407578063a22cb4651461040f578063b88d4fde1461042257600080fd5b806370a08231116100de57806370a08231146103b5578063715018a6146103c8578063847a2486146103d05780638da5cb5b146103e357600080fd5b8063510b51581461035b5780636352211e1461036e57806364e9293e14610381578063669d311c146103a257600080fd5b806323b872dd1161018757806342842e0e1161015657806342842e0e1461030f57806342966c681461032257806344dcc232146103355780634cd88b761461034857600080fd5b806323b872dd146102a057806326bd017e146102b35780632a55205a146102d45780632eb4a7ab1461030657600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806321ff99701461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f83660046121d0565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b604051610209919061223a565b61023a61023536600461224d565b610567565b6040516001600160a01b039091168152602001610209565b610265610260366004612282565b6105f4565b005b61021a61027536600461224d565b61070a565b610265610288366004612358565b6107af565b61026561029b36600461224d565b610824565b6102656102ae3660046123c5565b61085a565b6102c66102c1366004612419565b61088b565b604051908152602001610209565b6102e76102e23660046124be565b610bde565b604080516001600160a01b039093168352602083019190915201610209565b6102c660c95481565b61026561031d3660046123c5565b610c65565b61026561033036600461224d565b610c80565b61021a61034336600461224d565b610ccf565b6102656103563660046124e0565b610d69565b61023a61036936600461224d565b610df6565b61023a61037c36600461224d565b610e3c565b61039461038f36600461224d565b610eb3565b604051610209929190612544565b6102656103b0366004612572565b611041565b6102c66103c336600461259e565b61109c565b610265611123565b6102656103de3660046125b9565b611159565b6097546001600160a01b031661023a565b6102656104023660046125fd565b6113d5565b61021a6114a3565b61026561041d36600461263a565b6114b2565b610265610430366004612676565b611577565b61021a61044336600461224d565b6115a9565b6101fd6104563660046126f2565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61026561049236600461259e565b6115e9565b61023a6104a536600461224d565b611681565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf826116c7565b92915050565b6060606580546104e49061271c565b80601f01602080910402602001604051908101604052809291908181526020018280546105109061271c565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b600061057282611717565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610e3c565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b6107058383611734565b505050565b600081815260cb6020526040902060010180546060919061072a9061271c565b80601f01602080910402602001604051908101604052809291908181526020018280546107569061271c565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf90612751565b600083815260cb6020908152604090912083516107f892850190612121565b50600083815260cb60209081526040909120825161081e92600190920191840190612121565b50505050565b6097546001600160a01b0316331461084e5760405162461bcd60e51b81526004016105cf90612751565b610857816117a2565b50565b61086433826117dd565b6108805760405162461bcd60e51b81526004016105cf90612786565b6107058383836118c3565b600061091b6108e26108a3606087016040880161259e565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611a6392505050565b6109575760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b61271061096a60a08601608087016127d7565b61ffff16106109bb5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006109c660cc5490565b90506109d28682611a79565b6040805160a08101909152806109e887806127fb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602090810190610a31908801886127fb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610a7b606088016040890161259e565b6001600160a01b03168152602001610a99608088016060890161259e565b6001600160a01b03168152602001610ab760a08801608089016127d7565b61ffff169052600082815260cb60209081526040909120825180519192610ae392849290910190612121565b506020828101518051610afc9260018501920190612121565b506040828101516002830180546001600160a01b039283166001600160a01b03199091161790556060808501516003909401805460809096015161ffff16600160a01b026001600160b01b0319909616949092169390931793909317909255610b6a9190870190870161259e565b6001600160a01b031681337fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca610ba089806127fb565b610bad60208c018c6127fb565b604051610bbd949392919061286b565b60405180910390a4610bd360cc80546001019055565b90505b949350505050565b60008080610bf46097546001600160a01b031690565b6001600160a01b03161415610c185750506097546001600160a01b03166000610c5e565b6097546001600160a01b0316600085815260cb602052604090206003015461271090610c4f90600160a01b900461ffff16866128b3565b610c5991906128d2565b915091505b9250929050565b61070583838360405180602001604052806000815250611577565b610c8a33826117dd565b610cc65760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b61085781611a97565b60ca6020526000908152604090208054610ce89061271c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d149061271c565b8015610d615780601f10610d3657610100808354040283529160200191610d61565b820191906000526020600020905b815481529060010190602001808311610d4457829003601f168201915b505050505081565b600054610100900460ff1680610d82575060005460ff16155b610d9e5760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015610dc0576000805461ffff19166101011790555b610dca8383611b32565b610dd2611ba3565b610de060cc80546001019055565b8015610705576000805461ff0019169055505050565b6000610e0182611717565b610e1d5760405162461bcd60e51b81526004016105cf90612942565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610ee69061271c565b80601f0160208091040260200160405190810160405280929190818152602001828054610f129061271c565b8015610f5f5780601f10610f3457610100808354040283529160200191610f5f565b820191906000526020600020905b815481529060010190602001808311610f4257829003601f168201915b50505050508152602001600182018054610f789061271c565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa49061271c565b8015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b0316331461106b5760405162461bcd60e51b81526004016105cf90612751565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b0382166111075760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b0316331461114d5760405162461bcd60e51b81526004016105cf90612751565b6111576000611c1e565b565b61271061116c60a08301608084016127d7565b61ffff16106111bd5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006111c860cc5490565b90506111d48382611a79565b6040805160a08101909152806111ea84806127fb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602090810190611233908501856127fb565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161127d606085016040860161259e565b6001600160a01b0316815260200161129b608085016060860161259e565b6001600160a01b031681526020016112b960a08501608086016127d7565b61ffff169052600082815260cb602090815260409091208251805191926112e592849290910190612121565b5060208281015180516112fe9260018501920190612121565b506040828101516002830180546001600160a01b039283166001600160a01b03199091161790556060808501516003909401805460809096015161ffff16600160a01b026001600160b01b031990961694909216939093179390931790925561136c9190840190840161259e565b6001600160a01b031681337fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca6113a286806127fb565b6113af60208901896127fb565b6040516113bf949392919061286b565b60405180910390a461070560cc80546001019055565b816113df81611717565b6114225760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b0316331461144c5760405162461bcd60e51b81526004016105cf90612751565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c473098360405161147c919061223a565b60405180910390a2600083815260cb60209081526040909120835161081e92850190612121565b6060606680546104e49061271c565b6001600160a01b03821633141561150b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61158133836117dd565b61159d5760405162461bcd60e51b81526004016105cf90612786565b61081e84848484611c70565b60606115b482611717565b6115d05760405162461bcd60e51b81526004016105cf90612942565b600082815260cb60205260409020805461072a9061271c565b6097546001600160a01b031633146116135760405162461bcd60e51b81526004016105cf90612751565b6001600160a01b0381166116785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61085781611c1e565b600061168c82611717565b6116a85760405162461bcd60e51b81526004016105cf90612942565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b14806116f857506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061176982610e3c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b60006117e882611717565b6118495760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b600061185483610e3c565b9050806001600160a01b0316846001600160a01b0316148061188f5750836001600160a01b031661188484610567565b6001600160a01b0316145b80610bd657506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610bd6565b826001600160a01b03166118d682610e3c565b6001600160a01b03161461193e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b0382166119a05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6119ab600082611734565b6001600160a01b03831660009081526068602052604081208054600192906119d4908490612991565b90915550506001600160a01b0382166000908152606860205260408120805460019290611a029084906129a8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611a728260c95485611ca3565b9392505050565b611a93828260405180602001604052806000815250611d52565b5050565b6000611aa282610e3c565b9050611aaf600083611734565b6001600160a01b0381166000908152606860205260408120805460019290611ad8908490612991565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611b4b575060005460ff16155b611b675760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015611b89576000805461ffff19166101011790555b611b91611d85565b611b99611d85565b610de08383611def565b600054610100900460ff1680611bbc575060005460ff16155b611bd85760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015611bfa576000805461ffff19166101011790555b611c02611d85565b611c0a611e84565b8015610857576000805461ff001916905550565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611c7b8484846118c3565b611c8784848484611ee4565b61081e5760405162461bcd60e51b81526004016105cf906129c0565b600081815b8551811015611d47576000868281518110611cc557611cc5612a12565b60200260200101519050808311611d07576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611d34565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611d3f81612a28565b915050611ca8565b509092149392505050565b611d5c8383611fee565b611d696000848484611ee4565b6107055760405162461bcd60e51b81526004016105cf906129c0565b600054610100900460ff1680611d9e575060005460ff16155b611dba5760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015611c0a576000805461ffff19166101011790558015610857576000805461ff001916905550565b600054610100900460ff1680611e08575060005460ff16155b611e245760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015611e46576000805461ffff19166101011790555b8251611e59906065906020860190612121565b508151611e6d906066906020850190612121565b508015610705576000805461ff0019169055505050565b600054610100900460ff1680611e9d575060005460ff16155b611eb95760405162461bcd60e51b81526004016105cf906128f4565b600054610100900460ff16158015611edb576000805461ffff19166101011790555b611c0a33611c1e565b60006001600160a01b0384163b15611fe657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611f28903390899088908890600401612a43565b602060405180830381600087803b158015611f4257600080fd5b505af1925050508015611f72575060408051601f3d908101601f19168201909252611f6f91810190612a80565b60015b611fcc573d808015611fa0576040519150601f19603f3d011682016040523d82523d6000602084013e611fa5565b606091505b508051611fc45760405162461bcd60e51b81526004016105cf906129c0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd6565b506001610bd6565b6001600160a01b0382166120445760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b61204d81611717565b1561209a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b03821660009081526068602052604081208054600192906120c39084906129a8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461212d9061271c565b90600052602060002090601f01602090048101928261214f5760008555612195565b82601f1061216857805160ff1916838001178555612195565b82800160010185558215612195579182015b8281111561219557825182559160200191906001019061217a565b506121a19291506121a5565b5090565b5b808211156121a157600081556001016121a6565b6001600160e01b03198116811461085757600080fd5b6000602082840312156121e257600080fd5b8135611a72816121ba565b6000815180845260005b81811015612213576020818501810151868301820152016121f7565b81811115612225576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a7260208301846121ed565b60006020828403121561225f57600080fd5b5035919050565b80356001600160a01b038116811461227d57600080fd5b919050565b6000806040838503121561229557600080fd5b61229e83612266565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156122dd576122dd6122ac565b604051601f8501601f19908116603f01168101908282118183101715612305576123056122ac565b8160405280935085815286868601111561231e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261234957600080fd5b611a72838335602085016122c2565b60008060006060848603121561236d57600080fd5b83359250602084013567ffffffffffffffff8082111561238c57600080fd5b61239887838801612338565b935060408601359150808211156123ae57600080fd5b506123bb86828701612338565b9150509250925092565b6000806000606084860312156123da57600080fd5b6123e384612266565b92506123f160208501612266565b9150604084013590509250925092565b600060a0828403121561241357600080fd5b50919050565b6000806000806060858703121561242f57600080fd5b61243885612266565b9350602085013567ffffffffffffffff8082111561245557600080fd5b61246188838901612401565b9450604087013591508082111561247757600080fd5b818701915087601f83011261248b57600080fd5b81358181111561249a57600080fd5b8860208260051b85010111156124af57600080fd5b95989497505060200194505050565b600080604083850312156124d157600080fd5b50508035926020909101359150565b600080604083850312156124f357600080fd5b823567ffffffffffffffff8082111561250b57600080fd5b61251786838701612338565b9350602085013591508082111561252d57600080fd5b5061253a85828601612338565b9150509250929050565b60408152600061255760408301856121ed565b828103602084015261256981856121ed565b95945050505050565b6000806040838503121561258557600080fd5b8235915061259560208401612266565b90509250929050565b6000602082840312156125b057600080fd5b611a7282612266565b600080604083850312156125cc57600080fd5b6125d583612266565b9150602083013567ffffffffffffffff8111156125f157600080fd5b61253a85828601612401565b6000806040838503121561261057600080fd5b82359150602083013567ffffffffffffffff81111561262e57600080fd5b61253a85828601612338565b6000806040838503121561264d57600080fd5b61265683612266565b91506020830135801515811461266b57600080fd5b809150509250929050565b6000806000806080858703121561268c57600080fd5b61269585612266565b93506126a360208601612266565b925060408501359150606085013567ffffffffffffffff8111156126c657600080fd5b8501601f810187136126d757600080fd5b6126e6878235602084016122c2565b91505092959194509250565b6000806040838503121561270557600080fd5b61270e83612266565b915061259560208401612266565b600181811c9082168061273057607f821691505b6020821081141561241357634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000602082840312156127e957600080fd5b813561ffff81168114611a7257600080fd5b6000808335601e1984360301811261281257600080fd5b83018035915067ffffffffffffffff82111561282d57600080fd5b602001915036819003821315610c5e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152600061287f604083018688612842565b8281036020840152612892818587612842565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156128cd576128cd61289d565b500290565b6000826128ef57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6000828210156129a3576129a361289d565b500390565b600082198211156129bb576129bb61289d565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612a3c57612a3c61289d565b5060010190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a76908301846121ed565b9695505050505050565b600060208284031215612a9257600080fd5b8151611a72816121ba56fea2646970667358221220832147d82ef1084730113a2f108c3f2e7e1169da7ca430bc1c54ad6d8ad7f25064736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
