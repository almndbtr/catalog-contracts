/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MINT_WITH_SIG_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct ICTest.EIP712Signature",
        name: "_sig",
        type: "tuple",
      },
    ],
    name: "mintWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mintWithSigNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct ICTest.EIP712Signature",
        name: "_sig",
        type: "tuple",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permitNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff16806200002c575060005460ff16155b620000945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000b7576000805461ffff19166101011790555b8015620000ca576000805461ff00191690555b50612fd880620000db6000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80636352211e11610125578063b88d4fde116100ad578063de5236fb1161007c578063de5236fb146104d0578063e985e9c5146104f7578063f2fde38b14610533578063f8ccd5de14610546578063fbd8d2831461057157600080fd5b8063b88d4fde14610484578063c87b56dd14610497578063ce3d22e4146104aa578063cf115716146104bd57600080fd5b8063715018a6116100f4578063715018a6146104465780638da5cb5b1461044e578063906571471461045657806395d89b4114610469578063a22cb4651461047157600080fd5b80636352211e146103ec57806364e9293e146103ff578063669d311c1461042057806370a082311461043357600080fd5b80632a55205a116101a857806342842e0e1161017757806342842e0e1461038d57806342966c68146103a057806344dcc232146103b35780634783f0ef146103c6578063510b5158146103d957600080fd5b80632a55205a146103185780632a9da7041461034a5780632eb4a7ab1461035d57806330adf81f1461036657600080fd5b80630bcd899b116101ef5780630bcd899b1461029e5780630c0a9d26146102cc5780630e2a1778146102df5780631cbbc6e2146102f257806323b872dd1461030557600080fd5b806301ffc9a71461022157806306fdde0314610249578063081812fc1461025e578063095ea7b314610289575b600080fd5b61023461022f3660046125d9565b610584565b60405190151581526020015b60405180910390f35b6102516105af565b6040516102409190612643565b61027161026c366004612656565b610641565b6040516001600160a01b039091168152602001610240565b61029c61029736600461268b565b6106ce565b005b6102be6102ac3660046126b5565b60cd6020526000908152604090205481565b604051908152602001610240565b6102516102da366004612656565b6107e4565b61029c6102ed36600461275b565b610889565b61029c61030036600461282e565b610b33565b61029c61031336600461289b565b610bad565b61032b6103263660046128d7565b610bde565b604080516001600160a01b039093168352602083019190915201610240565b61029c61035836600461290b565b610c55565b6102be60c95481565b6102be7f1914ff5eed5bebce4e460efe8ca2cb12820f649e7a2f467f8bcbe84808e5972481565b61029c61039b36600461289b565b610e87565b61029c6103ae366004612656565b610ea2565b6102516103c1366004612656565b610eef565b61029c6103d4366004612656565b610f89565b6102716103e7366004612656565b610ff3565b6102716103fa366004612656565b611039565b61041261040d366004612656565b6110b0565b6040516102409291906129c4565b61029c61042e3660046129f2565b61123e565b6102be6104413660046126b5565b61129e565b61029c611325565b610271611360565b61029c610464366004612a1e565b611379565b610251611410565b61029c61047f366004612a59565b61141f565b61029c610492366004612a95565b6114e4565b6102516104a5366004612656565b611516565b61029c6104b8366004612b11565b611556565b61029c6104cb366004612bb6565b6116f0565b6102be7fd4d28b9b4e3ac4e47c619c8d769ef53b84fb230b16466cf9dacfefec9772654b81565b610234610505366004612cb7565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61029c6105413660046126b5565b61193d565b6102be61055436600461268b565b60cc60209081526000928352604080842090915290825290205481565b61027161057f366004612656565b6119da565b600063152a902d60e11b6001600160e01b0319831614806105a957506105a982611a20565b92915050565b6060606580546105be90612ce1565b80601f01602080910402602001604051908101604052809291908181526020018280546105ea90612ce1565b80156106375780601f1061060c57610100808354040283529160200191610637565b820191906000526020600020905b81548152906001019060200180831161061a57829003601f168201915b5050505050905090565b600061064c82611a70565b6106b25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d982611039565b9050806001600160a01b0316836001600160a01b031614156107475760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a9565b336001600160a01b038216148061076357506107638133610505565b6107d55760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a9565b6107df8383611a8d565b505050565b600081815260cb6020526040902060010180546060919061080490612ce1565b80601f016020809104026020016040519081016040528092919081815260200182805461083090612ce1565b801561087d5780601f106108525761010080835404028352916020019161087d565b820191906000526020600020905b81548152906001019060200180831161086057829003601f168201915b50505050509050919050565b80511580610898575080514211155b6108d65760405162461bcd60e51b815260206004820152600f60248201526e5065726d697420657870697265642160881b60448201526064016106a9565b6001600160a01b03831661092c5760405162461bcd60e51b815260206004820152601760248201527f526563697069656e742063616e6e6f742062652030783000000000000000000060448201526064016106a9565b6000610936611afb565b90506000817f1914ff5eed5bebce4e460efe8ca2cb12820f649e7a2f467f8bcbe84808e59724868660cc600061096b8a611039565b6001600160a01b03168152602080820192909252604090810160009081208b8252909252812080549161099d83612d32565b9091555087516040805160208101969096526001600160a01b03909416938501939093526060840191909152608083015260a082015260c00160405160208183030381529060405280519060200120604051602001610a1392919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050600060018285602001518660400151876060015160405160008152602001604052604051610a75949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610a97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610ad55750806001600160a01b0316610aca86611039565b6001600160a01b0316145b610b215760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964205369676e617475726521206865792121000000000000000060448201526064016106a9565b610b2b8686611a8d565b505050505050565b33610b3c611360565b6001600160a01b031614610b625760405162461bcd60e51b81526004016106a990612d4d565b600083815260cb602090815260409091208351610b819285019061252a565b50600083815260cb602090815260409091208251610ba79260019092019184019061252a565b50505050565b610bb73382611bc9565b610bd35760405162461bcd60e51b81526004016106a990612d82565b6107df838383611cb3565b60008080610bea611360565b6001600160a01b03161415610c0c57610c01611360565b600091509150610c4e565b610c14611360565b600085815260cb602052604090206003015461271090610c3f90600160a01b900461ffff1686612dd3565b610c499190612df2565b915091505b9250929050565b80511580610c635750805142105b610ca55760405162461bcd60e51b81526020600482015260136024820152721b5a5b9d15da5d1a14da59c8195e1c1a5c9959606a1b60448201526064016106a9565b6000610caf611afb565b6001600160a01b038616600090815260cd602052604081208054929350909183917fd4d28b9b4e3ac4e47c619c8d769ef53b84fb230b16466cf9dacfefec9772654b91879185610cfe83612d32565b90915550865160408051602081019590955261ffff909316928401929092526060830152608082015260a00160405160208183030381529060405280519060200120604051602001610d6792919061190160f01b81526002810192909252602282015260420190565b604051602081830303815290604052805190602001209050600060018285602001518660400151876060015160405160008152602001604052604051610dc9949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610deb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610e215750806001600160a01b0316876001600160a01b0316145b610e6d5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964205369676e617475726521207779642121210000000000000060448201526064016106a9565b610e7b8a8a8a8a8a8a611556565b50505050505050505050565b6107df838383604051806020016040528060008152506114e4565b33610eab611360565b6001600160a01b031614610ed15760405162461bcd60e51b81526004016106a990612d4d565b610eda81611a70565b610ee357600080fd5b610eec81611e53565b50565b60ca6020526000908152604090208054610f0890612ce1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3490612ce1565b8015610f815780601f10610f5657610100808354040283529160200191610f81565b820191906000526020600020905b815481529060010190602001808311610f6457829003601f168201915b505050505081565b33610f92611360565b6001600160a01b031614610fb85760405162461bcd60e51b81526004016106a990612d4d565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b6000610ffe82611a70565b61101a5760405162461bcd60e51b81526004016106a990612e14565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806105a95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a9565b606080600060cb60008581526020019081526020016000206040518060a00160405290816000820180546110e390612ce1565b80601f016020809104026020016040519081016040528092919081815260200182805461110f90612ce1565b801561115c5780601f106111315761010080835404028352916020019161115c565b820191906000526020600020905b81548152906001019060200180831161113f57829003601f168201915b5050505050815260200160018201805461117590612ce1565b80601f01602080910402602001604051908101604052809291908181526020018280546111a190612ce1565b80156111ee5780601f106111c3576101008083540402835291602001916111ee565b820191906000526020600020905b8154815290600101906020018083116111d157829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b33611247611360565b6001600160a01b03161461126d5760405162461bcd60e51b81526004016106a990612d4d565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b0382166113095760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a9565b506001600160a01b031660009081526068602052604090205490565b3361132e611360565b6001600160a01b0316146113545760405162461bcd60e51b81526004016106a990612d4d565b61135e6000611eee565b565b60006113746097546001600160a01b031690565b905090565b600054610100900460ff1680611392575060005460ff16155b6113ae5760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff161580156113d0576000805461ffff19166101011790555b6113da8383611f40565b6113e2611fc7565b6113eb8461193d565b6113f960ce80546001019055565b8015610ba7576000805461ff001916905550505050565b6060606680546105be90612ce1565b6001600160a01b0382163314156114785760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a9565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6114ee3383611bc9565b61150a5760405162461bcd60e51b81526004016106a990612d82565b610ba784848484612042565b606061152182611a70565b61153d5760405162461bcd60e51b81526004016106a990612e14565b600082815260cb60205260409020805461080490612ce1565b6127108161ffff16106115ab5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016106a9565b60006115b660ce5490565b90506115c28782612075565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb8252929092208151805192939192611619928492019061252a565b506020828101518051611632926001850192019061252a565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558416816116973390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca89896040516116d19291906129c4565b60405180910390a46116e760ce80546001019055565b50505050505050565b60408051606087901b6bffffffffffffffffffffffff191660208083019190915282516014818403018152603490920190925280519101206117659083838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061209392505050565b6117a15760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016106a9565b6127108361ffff16106117f65760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016106a9565b600061180160ce5490565b905061180d8982612075565b6040805160a08101825289815260208082018a90526001600160a01b03808a16838501528816606083015261ffff87166080830152600084815260cb8252929092208151805192939192611864928492019061252a565b50602082810151805161187d926001850192019061252a565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558616816118e23390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8b8b60405161191c9291906129c4565b60405180910390a461193260ce80546001019055565b505050505050505050565b33611946611360565b6001600160a01b03161461196c5760405162461bcd60e51b81526004016106a990612d4d565b6001600160a01b0381166119d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a9565b610eec81611eee565b60006119e582611a70565b611a015760405162461bcd60e51b81526004016106a990612e14565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b1480611a5157506001600160e01b03198216635b5e139f60e01b145b806105a957506301ffc9a760e01b6001600160e01b03198316146105a9565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611ac282611039565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6040805180820182526007815266436174616c6f6760c81b6020918201528151808301835260018152603160f81b9082015281517f6e9418f1dc20e379635b80ae8c9349271c00ea6c1496ad038731c99675489b76818301527f8f0622725b119d5873cf2bf856aa64635dc2f13ccd3382c9f04efc04e5d12d32818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6000611bd482611a70565b611c355760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a9565b6000611c4083611039565b9050806001600160a01b0316846001600160a01b03161480611c7b5750836001600160a01b0316611c7084610641565b6001600160a01b0316145b80611cab57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611cc682611039565b6001600160a01b031614611d2e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a9565b6001600160a01b038216611d905760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a9565b611d9b600082611a8d565b6001600160a01b0383166000908152606860205260408120805460019290611dc4908490612eb1565b90915550506001600160a01b0382166000908152606860205260408120805460019290611df2908490612ec8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611e5e82611039565b9050611e6b600083611a8d565b6001600160a01b0381166000908152606860205260408120805460019290611e94908490612eb1565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611f59575060005460ff16155b611f755760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff16158015611f97576000805461ffff19166101011790555b611f9f6120a9565b611fa76120a9565b611fb18383612113565b80156107df576000805461ff0019169055505050565b600054610100900460ff1680611fe0575060005460ff16155b611ffc5760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff1615801561201e576000805461ffff19166101011790555b6120266120a9565b61202e6121a8565b8015610eec576000805461ff001916905550565b61204d848484611cb3565b61205984848484612208565b610ba75760405162461bcd60e51b81526004016106a990612ee0565b61208f828260405180602001604052806000815250612315565b5050565b60006120a28260c95485612348565b9392505050565b600054610100900460ff16806120c2575060005460ff16155b6120de5760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff1615801561202e576000805461ffff19166101011790558015610eec576000805461ff001916905550565b600054610100900460ff168061212c575060005460ff16155b6121485760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff1615801561216a576000805461ffff19166101011790555b825161217d90606590602086019061252a565b50815161219190606690602085019061252a565b5080156107df576000805461ff0019169055505050565b600054610100900460ff16806121c1575060005460ff16155b6121dd5760405162461bcd60e51b81526004016106a990612e63565b600054610100900460ff161580156121ff576000805461ffff19166101011790555b61202e33611eee565b60006001600160a01b0384163b1561230a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061224c903390899088908890600401612f32565b602060405180830381600087803b15801561226657600080fd5b505af1925050508015612296575060408051601f3d908101601f1916820190925261229391810190612f6f565b60015b6122f0573d8080156122c4576040519150601f19603f3d011682016040523d82523d6000602084013e6122c9565b606091505b5080516122e85760405162461bcd60e51b81526004016106a990612ee0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611cab565b506001949350505050565b61231f83836123f7565b61232c6000848484612208565b6107df5760405162461bcd60e51b81526004016106a990612ee0565b600081815b85518110156123ec57600086828151811061236a5761236a612f8c565b602002602001015190508083116123ac5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506123d9565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806123e481612d32565b91505061234d565b509092149392505050565b6001600160a01b03821661244d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a9565b61245681611a70565b156124a35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a9565b6001600160a01b03821660009081526068602052604081208054600192906124cc908490612ec8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461253690612ce1565b90600052602060002090601f016020900481019282612558576000855561259e565b82601f1061257157805160ff191683800117855561259e565b8280016001018555821561259e579182015b8281111561259e578251825591602001919060010190612583565b506125aa9291506125ae565b5090565b5b808211156125aa57600081556001016125af565b6001600160e01b031981168114610eec57600080fd5b6000602082840312156125eb57600080fd5b81356120a2816125c3565b6000815180845260005b8181101561261c57602081850181015186830182015201612600565b8181111561262e576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006120a260208301846125f6565b60006020828403121561266857600080fd5b5035919050565b80356001600160a01b038116811461268657600080fd5b919050565b6000806040838503121561269e57600080fd5b6126a78361266f565b946020939093013593505050565b6000602082840312156126c757600080fd5b6120a28261266f565b634e487b7160e01b600052604160045260246000fd5b6000608082840312156126f857600080fd5b6040516080810181811067ffffffffffffffff8211171561271b5761271b6126d0565b60405282358152905080602083013560ff8116811461273957600080fd5b8060208301525060408301356040820152606083013560608201525092915050565b600080600060c0848603121561277057600080fd5b6127798461266f565b92506020840135915061278f85604086016126e6565b90509250925092565b600067ffffffffffffffff808411156127b3576127b36126d0565b604051601f8501601f19908116603f011681019082821181831017156127db576127db6126d0565b816040528093508581528686860111156127f457600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261281f57600080fd5b6120a283833560208501612798565b60008060006060848603121561284357600080fd5b83359250602084013567ffffffffffffffff8082111561286257600080fd5b61286e8783880161280e565b9350604086013591508082111561288457600080fd5b506128918682870161280e565b9150509250925092565b6000806000606084860312156128b057600080fd5b6128b98461266f565b92506128c76020850161266f565b9150604084013590509250925092565b600080604083850312156128ea57600080fd5b50508035926020909101359150565b803561ffff8116811461268657600080fd5b6000806000806000806000610140888a03121561292757600080fd5b6129308861266f565b9650602088013567ffffffffffffffff8082111561294d57600080fd5b6129598b838c0161280e565b975060408a013591508082111561296f57600080fd5b5061297c8a828b0161280e565b95505061298b6060890161266f565b93506129996080890161266f565b92506129a760a089016128f9565b91506129b68960c08a016126e6565b905092959891949750929550565b6040815260006129d760408301856125f6565b82810360208401526129e981856125f6565b95945050505050565b60008060408385031215612a0557600080fd5b82359150612a156020840161266f565b90509250929050565b600080600060608486031215612a3357600080fd5b612a3c8461266f565b9250602084013567ffffffffffffffff8082111561286257600080fd5b60008060408385031215612a6c57600080fd5b612a758361266f565b915060208301358015158114612a8a57600080fd5b809150509250929050565b60008060008060808587031215612aab57600080fd5b612ab48561266f565b9350612ac26020860161266f565b925060408501359150606085013567ffffffffffffffff811115612ae557600080fd5b8501601f81018713612af657600080fd5b612b0587823560208401612798565b91505092959194509250565b60008060008060008060c08789031215612b2a57600080fd5b612b338761266f565b9550602087013567ffffffffffffffff80821115612b5057600080fd5b612b5c8a838b0161280e565b96506040890135915080821115612b7257600080fd5b50612b7f89828a0161280e565b945050612b8e6060880161266f565b9250612b9c6080880161266f565b9150612baa60a088016128f9565b90509295509295509295565b60008060008060008060008060e0898b031215612bd257600080fd5b612bdb8961266f565b9750602089013567ffffffffffffffff80821115612bf857600080fd5b612c048c838d0161280e565b985060408b0135915080821115612c1a57600080fd5b612c268c838d0161280e565b9750612c3460608c0161266f565b9650612c4260808c0161266f565b9550612c5060a08c016128f9565b945060c08b0135915080821115612c6657600080fd5b818b0191508b601f830112612c7a57600080fd5b813581811115612c8957600080fd5b8c60208260051b8501011115612c9e57600080fd5b6020830194508093505050509295985092959890939650565b60008060408385031215612cca57600080fd5b612cd38361266f565b9150612a156020840161266f565b600181811c90821680612cf557607f821691505b60208210811415612d1657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612d4657612d46612d1c565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000816000190483118215151615612ded57612ded612d1c565b500290565b600082612e0f57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082821015612ec357612ec3612d1c565b500390565b60008219821115612edb57612edb612d1c565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612f65908301846125f6565b9695505050505050565b600060208284031215612f8157600080fd5b81516120a2816125c3565b634e487b7160e01b600052603260045260246000fdfea264697066735822122062404d2017714d58cea85f80b11f516e0c5712c08617034082e0d1b6dd57cc0664736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
