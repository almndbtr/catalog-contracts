/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTest, CTestInterface } from "../CTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_royaltyBPS",
        type: "uint16",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintAllowlist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506128ee80620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f57806399d30fea116100a2578063ce3d22e411610071578063ce3d22e414610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b806399d30fea146103e9578063a22cb465146103fc578063b88d4fde1461040f578063c87b56dd1461042257600080fd5b8063715018a6116100de578063715018a6146103b55780638da5cb5b146103bd5780638fe86b3f146103ce57806395d89b41146103e157600080fd5b80636352211e1461035b57806364e9293e1461036e578063669d311c1461038f57806370a08231146103a257600080fd5b80632a55205a1161018757806344dcc2321161015657806344dcc2321461030f5780634783f0ef146103225780634cd88b7614610335578063510b51581461034857600080fd5b80632a55205a146102a05780632eb4a7ab146102d257806342842e0e146102e957806342966c68146102fc57600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806323b872dd1461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611ff4565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b604051610209919061205e565b61023a610235366004612071565b610567565b6040516001600160a01b039091168152602001610209565b6102656102603660046120a6565b6105f4565b005b61021a610275366004612071565b61070a565b61026561028836600461217c565b6107af565b61026561029b3660046121e9565b610824565b6102b36102ae366004612225565b610855565b604080516001600160a01b039093168352602083019190915201610209565b6102db60c95481565b604051908152602001610209565b6102656102f73660046121e9565b6108dc565b61026561030a366004612071565b6108f7565b61021a61031d366004612071565b610949565b610265610330366004612071565b6109e3565b610265610343366004612247565b610a48565b61023a610356366004612071565b610ad5565b61023a610369366004612071565b610b1b565b61038161037c366004612071565b610b92565b6040516102099291906122ab565b61026561039d3660046122d9565b610d20565b6102db6103b0366004612305565b610d7b565b610265610e02565b6097546001600160a01b031661023a565b6102656103dc366004612320565b610e38565b61021a610f06565b6102db6103f736600461236f565b610f15565b61026561040a366004612470565b611170565b61026561041d3660046124ac565b611235565b61021a610430366004612071565b611267565b610265610443366004612528565b6112a7565b6101fd6104563660046125cd565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610265610492366004612305565b611441565b61023a6104a5366004612071565b6114d9565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf8261151f565b92915050565b6060606580546104e4906125f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610510906125f7565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b60006105728261156f565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610b1b565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b610705838361158c565b505050565b600081815260cb6020526040902060010180546060919061072a906125f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610756906125f7565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf90612632565b600083815260cb6020908152604090912083516107f892850190611f45565b50600083815260cb60209081526040909120825161081e92600190920191840190611f45565b50505050565b61082e33826115fa565b61084a5760405162461bcd60e51b81526004016105cf90612667565b6107058383836116e4565b6000808061086b6097546001600160a01b031690565b6001600160a01b0316141561088f5750506097546001600160a01b031660006108d5565b6097546001600160a01b0316600085815260cb6020526040902060030154612710906108c690600160a01b900461ffff16866126ce565b6108d091906126ed565b915091505b9250929050565b61070583838360405180602001604052806000815250611235565b61090133826115fa565b61093d5760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b61094681611884565b50565b60ca6020526000908152604090208054610962906125f7565b80601f016020809104026020016040519081016040528092919081815260200182805461098e906125f7565b80156109db5780601f106109b0576101008083540402835291602001916109db565b820191906000526020600020905b8154815290600101906020018083116109be57829003601f168201915b505050505081565b6097546001600160a01b03163314610a0d5760405162461bcd60e51b81526004016105cf90612632565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b600054610100900460ff1680610a61575060005460ff16155b610a7d5760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff16158015610a9f576000805461ffff19166101011790555b610aa9838361191f565b610ab1611990565b610abf60cc80546001019055565b8015610705576000805461ff0019169055505050565b6000610ae08261156f565b610afc5760405162461bcd60e51b81526004016105cf9061275d565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610bc5906125f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf1906125f7565b8015610c3e5780601f10610c1357610100808354040283529160200191610c3e565b820191906000526020600020905b815481529060010190602001808311610c2157829003601f168201915b50505050508152602001600182018054610c57906125f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c83906125f7565b8015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b03163314610d4a5760405162461bcd60e51b81526004016105cf90612632565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610de65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610e2c5760405162461bcd60e51b81526004016105cf90612632565b610e366000611a0b565b565b81610e428161156f565b610e855760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b03163314610eaf5760405162461bcd60e51b81526004016105cf90612632565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c4730983604051610edf919061205e565b60405180910390a2600083815260cb60209081526040909120835161081e92850190611f45565b6060606680546104e4906125f7565b6000610f96610f5d876040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611a5d92505050565b610fd25760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b6127108461ffff16106110275760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b600061103260cc5490565b905061103e8a82611a73565b6040805160a0810182528a815260208082018b90526001600160a01b03808b16838501528916606083015261ffff88166080830152600084815260cb82529290922081518051929391926110959284920190611f45565b5060208281015180516110ae9260018501920190611f45565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558716816111133390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca8c8c60405161114d9291906122ab565b60405180910390a461116360cc80546001019055565b9998505050505050505050565b6001600160a01b0382163314156111c95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61123f33836115fa565b61125b5760405162461bcd60e51b81526004016105cf90612667565b61081e84848484611a91565b60606112728261156f565b61128e5760405162461bcd60e51b81526004016105cf9061275d565b600082815260cb60205260409020805461072a906125f7565b6127108161ffff16106112fc5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b600061130760cc5490565b90506113138782611a73565b6040805160a08101825287815260208082018890526001600160a01b03808816838501528616606083015261ffff85166080830152600084815260cb825292909220815180519293919261136a9284920190611f45565b5060208281015180516113839260018501920190611f45565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416928216929092179290921790558416816113e83390565b6001600160a01b03167fe2c569ed71e28d19c0a19f2527b47c361721165c00055e89f3d82b55b59831ca89896040516114229291906122ab565b60405180910390a461143860cc80546001019055565b50505050505050565b6097546001600160a01b0316331461146b5760405162461bcd60e51b81526004016105cf90612632565b6001600160a01b0381166114d05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61094681611a0b565b60006114e48261156f565b6115005760405162461bcd60e51b81526004016105cf9061275d565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061155057506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115c182610b1b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006116058261156f565b6116665760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b600061167183610b1b565b9050806001600160a01b0316846001600160a01b031614806116ac5750836001600160a01b03166116a184610567565b6001600160a01b0316145b806116dc57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166116f782610b1b565b6001600160a01b03161461175f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b0382166117c15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6117cc60008261158c565b6001600160a01b03831660009081526068602052604081208054600192906117f59084906127ac565b90915550506001600160a01b03821660009081526068602052604081208054600192906118239084906127c3565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061188f82610b1b565b905061189c60008361158c565b6001600160a01b03811660009081526068602052604081208054600192906118c59084906127ac565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611938575060005460ff16155b6119545760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff16158015611976576000805461ffff19166101011790555b61197e611ac4565b611986611ac4565b610abf8383611b2e565b600054610100900460ff16806119a9575060005460ff16155b6119c55760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff161580156119e7576000805461ffff19166101011790555b6119ef611ac4565b6119f7611bc3565b8015610946576000805461ff001916905550565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611a6c8260c95485611c23565b9392505050565b611a8d828260405180602001604052806000815250611cd2565b5050565b611a9c8484846116e4565b611aa884848484611d05565b61081e5760405162461bcd60e51b81526004016105cf906127db565b600054610100900460ff1680611add575060005460ff16155b611af95760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff161580156119f7576000805461ffff19166101011790558015610946576000805461ff001916905550565b600054610100900460ff1680611b47575060005460ff16155b611b635760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff16158015611b85576000805461ffff19166101011790555b8251611b98906065906020860190611f45565b508151611bac906066906020850190611f45565b508015610705576000805461ff0019169055505050565b600054610100900460ff1680611bdc575060005460ff16155b611bf85760405162461bcd60e51b81526004016105cf9061270f565b600054610100900460ff16158015611c1a576000805461ffff19166101011790555b6119f733611a0b565b600081815b8551811015611cc7576000868281518110611c4557611c4561282d565b60200260200101519050808311611c87576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611cb4565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611cbf81612843565b915050611c28565b509092149392505050565b611cdc8383611e12565b611ce96000848484611d05565b6107055760405162461bcd60e51b81526004016105cf906127db565b60006001600160a01b0384163b15611e0757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d4990339089908890889060040161285e565b602060405180830381600087803b158015611d6357600080fd5b505af1925050508015611d93575060408051601f3d908101601f19168201909252611d909181019061289b565b60015b611ded573d808015611dc1576040519150601f19603f3d011682016040523d82523d6000602084013e611dc6565b606091505b508051611de55760405162461bcd60e51b81526004016105cf906127db565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506116dc565b506001949350505050565b6001600160a01b038216611e685760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b611e718161156f565b15611ebe5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b0382166000908152606860205260408120805460019290611ee79084906127c3565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611f51906125f7565b90600052602060002090601f016020900481019282611f735760008555611fb9565b82601f10611f8c57805160ff1916838001178555611fb9565b82800160010185558215611fb9579182015b82811115611fb9578251825591602001919060010190611f9e565b50611fc5929150611fc9565b5090565b5b80821115611fc55760008155600101611fca565b6001600160e01b03198116811461094657600080fd5b60006020828403121561200657600080fd5b8135611a6c81611fde565b6000815180845260005b818110156120375760208185018101518683018201520161201b565b81811115612049576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611a6c6020830184612011565b60006020828403121561208357600080fd5b5035919050565b80356001600160a01b03811681146120a157600080fd5b919050565b600080604083850312156120b957600080fd5b6120c28361208a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612101576121016120d0565b604051601f8501601f19908116603f01168101908282118183101715612129576121296120d0565b8160405280935085815286868601111561214257600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261216d57600080fd5b611a6c838335602085016120e6565b60008060006060848603121561219157600080fd5b83359250602084013567ffffffffffffffff808211156121b057600080fd5b6121bc8783880161215c565b935060408601359150808211156121d257600080fd5b506121df8682870161215c565b9150509250925092565b6000806000606084860312156121fe57600080fd5b6122078461208a565b92506122156020850161208a565b9150604084013590509250925092565b6000806040838503121561223857600080fd5b50508035926020909101359150565b6000806040838503121561225a57600080fd5b823567ffffffffffffffff8082111561227257600080fd5b61227e8683870161215c565b9350602085013591508082111561229457600080fd5b506122a18582860161215c565b9150509250929050565b6040815260006122be6040830185612011565b82810360208401526122d08185612011565b95945050505050565b600080604083850312156122ec57600080fd5b823591506122fc6020840161208a565b90509250929050565b60006020828403121561231757600080fd5b611a6c8261208a565b6000806040838503121561233357600080fd5b82359150602083013567ffffffffffffffff81111561235157600080fd5b6122a18582860161215c565b803561ffff811681146120a157600080fd5b60008060008060008060008060e0898b03121561238b57600080fd5b6123948961208a565b9750602089013567ffffffffffffffff808211156123b157600080fd5b6123bd8c838d0161215c565b985060408b01359150808211156123d357600080fd5b6123df8c838d0161215c565b97506123ed60608c0161208a565b96506123fb60808c0161208a565b955061240960a08c0161235d565b945060c08b013591508082111561241f57600080fd5b818b0191508b601f83011261243357600080fd5b81358181111561244257600080fd5b8c60208260051b850101111561245757600080fd5b6020830194508093505050509295985092959890939650565b6000806040838503121561248357600080fd5b61248c8361208a565b9150602083013580151581146124a157600080fd5b809150509250929050565b600080600080608085870312156124c257600080fd5b6124cb8561208a565b93506124d96020860161208a565b925060408501359150606085013567ffffffffffffffff8111156124fc57600080fd5b8501601f8101871361250d57600080fd5b61251c878235602084016120e6565b91505092959194509250565b60008060008060008060c0878903121561254157600080fd5b61254a8761208a565b9550602087013567ffffffffffffffff8082111561256757600080fd5b6125738a838b0161215c565b9650604089013591508082111561258957600080fd5b5061259689828a0161215c565b9450506125a56060880161208a565b92506125b36080880161208a565b91506125c160a0880161235d565b90509295509295509295565b600080604083850312156125e057600080fd5b6125e98361208a565b91506122fc6020840161208a565b600181811c9082168061260b57607f821691505b6020821081141561262c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156126e8576126e86126b8565b500290565b60008261270a57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6000828210156127be576127be6126b8565b500390565b600082198211156127d6576127d66126b8565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612857576128576126b8565b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061289190830184612011565b9695505050505050565b6000602082840312156128ad57600080fd5b8151611a6c81611fde56fea264697066735822122066ae880b975baf65c2f107f58bf7de804a7bf17054e33bb532f0b3f0fc92f0db64736f6c63430008090033";

export class CTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTest> {
    return super.deploy(overrides || {}) as Promise<CTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTest {
    return super.attach(address) as CTest;
  }
  connect(signer: Signer): CTest__factory {
    return super.connect(signer) as CTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTestInterface {
    return new utils.Interface(_abi) as CTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CTest {
    return new Contract(address, _abi, signerOrProvider) as CTest;
  }
}
