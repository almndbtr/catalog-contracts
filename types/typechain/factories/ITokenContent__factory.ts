/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ITokenContent, ITokenContentInterface } from "../ITokenContent";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "content",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "mime",
            type: "string",
          },
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
        ],
        internalType: "struct ContentData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITokenContent__factory {
  static readonly abi = _abi;
  static createInterface(): ITokenContentInterface {
    return new utils.Interface(_abi) as ITokenContentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITokenContent {
    return new Contract(address, _abi, signerOrProvider) as ITokenContent;
  }
}
