/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTLTest, CTLTestInterface } from "../CTLTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RoyaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintAllowlist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506129ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f57806395d89b41116100a2578063d9a7d64d11610071578063d9a7d64d14610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b806395d89b41146103f4578063a22cb465146103fc578063b88d4fde1461040f578063c87b56dd1461042257600080fd5b8063715018a6116100de578063715018a6146103b557806378236d37146103bd5780638da5cb5b146103d05780638fe86b3f146103e157600080fd5b80636352211e1461035b57806364e9293e1461036e578063669d311c1461038f57806370a08231146103a257600080fd5b806323b872dd1161018757806342966c681161015657806342966c681461030f57806344dcc232146103225780634cd88b7614610335578063510b51581461034857600080fd5b806323b872dd146102a05780632a55205a146102b35780632eb4a7ab146102e557806342842e0e146102fc57600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806321ff99701461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f836600461211e565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b6040516102099190612188565b61023a61023536600461219b565b610567565b6040516001600160a01b039091168152602001610209565b6102656102603660046121d0565b6105f4565b005b61021a61027536600461219b565b61070a565b6102656102883660046122a6565b6107af565b61026561029b36600461219b565b610824565b6102656102ae366004612313565b61085a565b6102c66102c136600461234f565b61088b565b604080516001600160a01b039093168352602083019190915201610209565b6102ee60c95481565b604051908152602001610209565b61026561030a366004612313565b610912565b61026561031d36600461219b565b61092d565b61021a61033036600461219b565b61097c565b610265610343366004612371565b610a16565b61023a61035636600461219b565b610aa3565b61023a61036936600461219b565b610ae9565b61038161037c36600461219b565b610b60565b6040516102099291906123d5565b61026561039d366004612403565b610cee565b6102ee6103b036600461242f565b610d49565b610265610dd0565b6102ee6103cb366004612462565b610e06565b6097546001600160a01b031661023a565b6102656103ef3660046124fc565b6110e9565b61021a6111b7565b61026561040a366004612539565b6111c6565b61026561041d366004612575565b6111d5565b61021a61043036600461219b565b611207565b6102656104433660046125f1565b611247565b6101fd610456366004612626565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61026561049236600461242f565b611456565b61023a6104a536600461219b565b6114ee565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf82611534565b92915050565b6060606580546104e490612650565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612650565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b600061057282611584565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610ae9565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b61070583836115a1565b505050565b600081815260cb6020526040902060010180546060919061072a90612650565b80601f016020809104026020016040519081016040528092919081815260200182805461075690612650565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf90612685565b600083815260cb6020908152604090912083516107f89285019061206f565b50600083815260cb60209081526040909120825161081e9260019092019184019061206f565b50505050565b6097546001600160a01b0316331461084e5760405162461bcd60e51b81526004016105cf90612685565b6108578161160f565b50565b610864338261164a565b6108805760405162461bcd60e51b81526004016105cf906126ba565b610705838383611730565b600080806108a16097546001600160a01b031690565b6001600160a01b031614156108c55750506097546001600160a01b0316600061090b565b6097546001600160a01b0316600085815260cb6020526040902060030154612710906108fc90600160a01b900461ffff1686612721565b6109069190612740565b915091505b9250929050565b610705838383604051806020016040528060008152506111d5565b610937338261164a565b6109735760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b610857816118d0565b60ca602052600090815260409020805461099590612650565b80601f01602080910402602001604051908101604052809291908181526020018280546109c190612650565b8015610a0e5780601f106109e357610100808354040283529160200191610a0e565b820191906000526020600020905b8154815290600101906020018083116109f157829003601f168201915b505050505081565b600054610100900460ff1680610a2f575060005460ff16155b610a4b5760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff16158015610a6d576000805461ffff19166101011790555b610a77838361196b565b610a7f6119dc565b610a8d60cc80546001019055565b8015610705576000805461ff0019169055505050565b6000610aae82611584565b610aca5760405162461bcd60e51b81526004016105cf906127b0565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b9390612650565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbf90612650565b8015610c0c5780601f10610be157610100808354040283529160200191610c0c565b820191906000526020600020905b815481529060010190602001808311610bef57829003601f168201915b50505050508152602001600182018054610c2590612650565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5190612650565b8015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b03163314610d185760405162461bcd60e51b81526004016105cf90612685565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610db45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610dfa5760405162461bcd60e51b81526004016105cf90612685565b610e046000611a57565b565b6000610e96610e5d610e1e606087016040880161242f565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611aa992505050565b610ed25760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b612710610ee560a08601608087016127ff565b61ffff1610610f365760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b6000610f4160cc5490565b9050610f4d3382611abf565b6040805160a0810190915280610f638780612823565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602090810190610fac90880188612823565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610ff6606088016040890161242f565b6001600160a01b03168152602001611014608088016060890161242f565b6001600160a01b0316815260200161103260a08801608089016127ff565b61ffff169052600082815260cb6020908152604090912082518051919261105e9284929091019061206f565b506020828101518051611077926001850192019061206f565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b031990941692909116919091179190911790556110e160cc80546001019055565b949350505050565b816110f381611584565b6111365760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b031633146111605760405162461bcd60e51b81526004016105cf90612685565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c47309836040516111909190612188565b60405180910390a2600083815260cb60209081526040909120835161081e9285019061206f565b6060606680546104e490612650565b6111d1338383611ad9565b5050565b6111df338361164a565b6111fb5760405162461bcd60e51b81526004016105cf906126ba565b61081e84848484611ba8565b606061121282611584565b61122e5760405162461bcd60e51b81526004016105cf906127b0565b600082815260cb60205260409020805461072a90612650565b61271061125a60a08301608084016127ff565b61ffff16106112ab5760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b60006112b660cc5490565b90506112c23382611abf565b6040805160a08101909152806112d88480612823565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060209081019061132190850185612823565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161136b606085016040860161242f565b6001600160a01b03168152602001611389608085016060860161242f565b6001600160a01b031681526020016113a760a08501608086016127ff565b61ffff169052600082815260cb602090815260409091208251805191926113d39284929091019061206f565b5060208281015180516113ec926001850192019061206f565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b031990941692909116919091179190911790556111d160cc80546001019055565b6097546001600160a01b031633146114805760405162461bcd60e51b81526004016105cf90612685565b6001600160a01b0381166114e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61085781611a57565b60006114f982611584565b6115155760405162461bcd60e51b81526004016105cf906127b0565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061156557506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115d682610ae9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b600061165582611584565b6116b65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b60006116c183610ae9565b9050806001600160a01b0316846001600160a01b031614806116fc5750836001600160a01b03166116f184610567565b6001600160a01b0316145b806110e157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff166110e1565b826001600160a01b031661174382610ae9565b6001600160a01b0316146117ab5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b03821661180d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6118186000826115a1565b6001600160a01b038316600090815260686020526040812080546001929061184190849061286a565b90915550506001600160a01b038216600090815260686020526040812080546001929061186f908490612881565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006118db82610ae9565b90506118e86000836115a1565b6001600160a01b038116600090815260686020526040812080546001929061191190849061286a565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611984575060005460ff16155b6119a05760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff161580156119c2576000805461ffff19166101011790555b6119ca611bdb565b6119d2611bdb565b610a8d8383611c45565b600054610100900460ff16806119f5575060005460ff16155b611a115760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff16158015611a33576000805461ffff19166101011790555b611a3b611bdb565b611a43611cda565b8015610857576000805461ff001916905550565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611ab88260c95485611d3a565b9392505050565b6111d1828260405180602001604052806000815250611d50565b816001600160a01b0316836001600160a01b03161415611b3b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611bb3848484611730565b611bbf84848484611d83565b61081e5760405162461bcd60e51b81526004016105cf90612899565b600054610100900460ff1680611bf4575060005460ff16155b611c105760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff16158015611a43576000805461ffff19166101011790558015610857576000805461ff001916905550565b600054610100900460ff1680611c5e575060005460ff16155b611c7a5760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff16158015611c9c576000805461ffff19166101011790555b8251611caf90606590602086019061206f565b508151611cc390606690602085019061206f565b508015610705576000805461ff0019169055505050565b600054610100900460ff1680611cf3575060005460ff16155b611d0f5760405162461bcd60e51b81526004016105cf90612762565b600054610100900460ff16158015611d31576000805461ffff19166101011790555b611a4333611a57565b600082611d478584611e90565b14949350505050565b611d5a8383611f3c565b611d676000848484611d83565b6107055760405162461bcd60e51b81526004016105cf90612899565b60006001600160a01b0384163b15611e8557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611dc79033908990889088906004016128eb565b602060405180830381600087803b158015611de157600080fd5b505af1925050508015611e11575060408051601f3d908101601f19168201909252611e0e91810190612928565b60015b611e6b573d808015611e3f576040519150601f19603f3d011682016040523d82523d6000602084013e611e44565b606091505b508051611e635760405162461bcd60e51b81526004016105cf90612899565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110e1565b506001949350505050565b600081815b8451811015611f34576000858281518110611eb257611eb2612945565b60200260200101519050808311611ef4576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611f21565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611f2c8161295b565b915050611e95565b509392505050565b6001600160a01b038216611f925760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b611f9b81611584565b15611fe85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b0382166000908152606860205260408120805460019290612011908490612881565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461207b90612650565b90600052602060002090601f01602090048101928261209d57600085556120e3565b82601f106120b657805160ff19168380011785556120e3565b828001600101855582156120e3579182015b828111156120e35782518255916020019190600101906120c8565b506120ef9291506120f3565b5090565b5b808211156120ef57600081556001016120f4565b6001600160e01b03198116811461085757600080fd5b60006020828403121561213057600080fd5b8135611ab881612108565b6000815180845260005b8181101561216157602081850181015186830182015201612145565b81811115612173576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ab8602083018461213b565b6000602082840312156121ad57600080fd5b5035919050565b80356001600160a01b03811681146121cb57600080fd5b919050565b600080604083850312156121e357600080fd5b6121ec836121b4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561222b5761222b6121fa565b604051601f8501601f19908116603f01168101908282118183101715612253576122536121fa565b8160405280935085815286868601111561226c57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261229757600080fd5b611ab883833560208501612210565b6000806000606084860312156122bb57600080fd5b83359250602084013567ffffffffffffffff808211156122da57600080fd5b6122e687838801612286565b935060408601359150808211156122fc57600080fd5b5061230986828701612286565b9150509250925092565b60008060006060848603121561232857600080fd5b612331846121b4565b925061233f602085016121b4565b9150604084013590509250925092565b6000806040838503121561236257600080fd5b50508035926020909101359150565b6000806040838503121561238457600080fd5b823567ffffffffffffffff8082111561239c57600080fd5b6123a886838701612286565b935060208501359150808211156123be57600080fd5b506123cb85828601612286565b9150509250929050565b6040815260006123e8604083018561213b565b82810360208401526123fa818561213b565b95945050505050565b6000806040838503121561241657600080fd5b82359150612426602084016121b4565b90509250929050565b60006020828403121561244157600080fd5b611ab8826121b4565b600060a0828403121561245c57600080fd5b50919050565b60008060006040848603121561247757600080fd5b833567ffffffffffffffff8082111561248f57600080fd5b61249b8783880161244a565b945060208601359150808211156124b157600080fd5b818601915086601f8301126124c557600080fd5b8135818111156124d457600080fd5b8760208260051b85010111156124e957600080fd5b6020830194508093505050509250925092565b6000806040838503121561250f57600080fd5b82359150602083013567ffffffffffffffff81111561252d57600080fd5b6123cb85828601612286565b6000806040838503121561254c57600080fd5b612555836121b4565b91506020830135801515811461256a57600080fd5b809150509250929050565b6000806000806080858703121561258b57600080fd5b612594856121b4565b93506125a2602086016121b4565b925060408501359150606085013567ffffffffffffffff8111156125c557600080fd5b8501601f810187136125d657600080fd5b6125e587823560208401612210565b91505092959194509250565b60006020828403121561260357600080fd5b813567ffffffffffffffff81111561261a57600080fd5b6110e18482850161244a565b6000806040838503121561263957600080fd5b612642836121b4565b9150612426602084016121b4565b600181811c9082168061266457607f821691505b6020821081141561245c57634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561273b5761273b61270b565b500290565b60008261275d57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60006020828403121561281157600080fd5b813561ffff81168114611ab857600080fd5b6000808335601e1984360301811261283a57600080fd5b83018035915067ffffffffffffffff82111561285557600080fd5b60200191503681900382131561090b57600080fd5b60008282101561287c5761287c61270b565b500390565b600082198211156128945761289461270b565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061291e9083018461213b565b9695505050505050565b60006020828403121561293a57600080fd5b8151611ab881612108565b634e487b7160e01b600052603260045260246000fd5b600060001982141561296f5761296f61270b565b506001019056fea2646970667358221220f6d6a3d743058cea7ee94fd6c968de4086d590b484b283bfcca8b9743ba6fb6664736f6c63430008090033";

export class CTLTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTLTest> {
    return super.deploy(overrides || {}) as Promise<CTLTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTLTest {
    return super.attach(address) as CTLTest;
  }
  connect(signer: Signer): CTLTest__factory {
    return super.connect(signer) as CTLTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTLTestInterface {
    return new utils.Interface(_abi) as CTLTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTLTest {
    return new Contract(address, _abi, signerOrProvider) as CTLTest;
  }
}
