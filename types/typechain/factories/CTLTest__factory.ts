/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CTLTest, CTLTestInterface } from "../CTLTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "RoyaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "merkleRootUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadataURI",
            type: "string",
          },
          {
            internalType: "string",
            name: "contentURI",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "address",
            name: "royaltyPayout",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "royaltyBPS",
            type: "uint16",
          },
        ],
        internalType: "struct ICTest.TokenData",
        name: "_data",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "mintAllowlist",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "royaltyPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMetadataURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
    ],
    name: "updateMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "updateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_royaltyPayoutAddress",
        type: "address",
      },
    ],
    name: "updateRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_metadataURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_contentURI",
        type: "string",
      },
    ],
    name: "updateTokenURIs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612984806100206000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80636352211e1161010f57806395d89b41116100a2578063d9a7d64d11610071578063d9a7d64d14610435578063e985e9c514610448578063f2fde38b14610484578063fbd8d2831461049757600080fd5b806395d89b41146103f4578063a22cb465146103fc578063b88d4fde1461040f578063c87b56dd1461042257600080fd5b8063715018a6116100de578063715018a6146103b557806378236d37146103bd5780638da5cb5b146103d05780638fe86b3f146103e157600080fd5b80636352211e1461035b57806364e9293e1461036e578063669d311c1461038f57806370a08231146103a257600080fd5b806323b872dd1161018757806342966c681161015657806342966c681461030f57806344dcc232146103225780634cd88b7614610335578063510b51581461034857600080fd5b806323b872dd146102a05780632a55205a146102b35780632eb4a7ab146102e557806342842e0e146102fc57600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c0a9d26146102675780631cbbc6e21461027a57806321ff99701461028d57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f83660046120f6565b6104aa565b60405190151581526020015b60405180910390f35b61021a6104d5565b6040516102099190612160565b61023a610235366004612173565b610567565b6040516001600160a01b039091168152602001610209565b6102656102603660046121a8565b6105f4565b005b61021a610275366004612173565b61070a565b61026561028836600461227e565b6107af565b61026561029b366004612173565b610824565b6102656102ae3660046122eb565b61085a565b6102c66102c1366004612327565b61088b565b604080516001600160a01b039093168352602083019190915201610209565b6102ee60c95481565b604051908152602001610209565b61026561030a3660046122eb565b610912565b61026561031d366004612173565b61092d565b61021a610330366004612173565b61097c565b610265610343366004612349565b610a16565b61023a610356366004612173565b610aa3565b61023a610369366004612173565b610ae9565b61038161037c366004612173565b610b60565b6040516102099291906123ad565b61026561039d3660046123db565b610cee565b6102ee6103b0366004612407565b610d49565b610265610dd0565b6102ee6103cb36600461243a565b610e06565b6097546001600160a01b031661023a565b6102656103ef3660046124d4565b6110e9565b61021a6111b7565b61026561040a366004612511565b6111c6565b61026561041d36600461254d565b61128b565b61021a610430366004612173565b6112bd565b6102656104433660046125c9565b6112fd565b6101fd6104563660046125fe565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610265610492366004612407565b611510565b61023a6104a5366004612173565b6115a8565b600063152a902d60e11b6001600160e01b0319831614806104cf57506104cf826115ee565b92915050565b6060606580546104e490612628565b80601f016020809104026020016040519081016040528092919081815260200182805461051090612628565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b60006105728261163e565b6105d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ff82610ae9565b9050806001600160a01b0316836001600160a01b0316141561066d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cf565b336001600160a01b038216148061068957506106898133610456565b6106fb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cf565b610705838361165b565b505050565b600081815260cb6020526040902060010180546060919061072a90612628565b80601f016020809104026020016040519081016040528092919081815260200182805461075690612628565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b50505050509050919050565b6097546001600160a01b031633146107d95760405162461bcd60e51b81526004016105cf9061265d565b600083815260cb6020908152604090912083516107f892850190612047565b50600083815260cb60209081526040909120825161081e92600190920191840190612047565b50505050565b6097546001600160a01b0316331461084e5760405162461bcd60e51b81526004016105cf9061265d565b610857816116c9565b50565b6108643382611704565b6108805760405162461bcd60e51b81526004016105cf90612692565b6107058383836117ea565b600080806108a16097546001600160a01b031690565b6001600160a01b031614156108c55750506097546001600160a01b0316600061090b565b6097546001600160a01b0316600085815260cb6020526040902060030154612710906108fc90600160a01b900461ffff16866126f9565b6109069190612718565b915091505b9250929050565b6107058383836040518060200160405280600081525061128b565b6109373382611704565b6109735760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420417070726f7665642160981b60448201526064016105cf565b6108578161198a565b60ca602052600090815260409020805461099590612628565b80601f01602080910402602001604051908101604052809291908181526020018280546109c190612628565b8015610a0e5780601f106109e357610100808354040283529160200191610a0e565b820191906000526020600020905b8154815290600101906020018083116109f157829003601f168201915b505050505081565b600054610100900460ff1680610a2f575060005460ff16155b610a4b5760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015610a6d576000805461ffff19166101011790555b610a778383611a25565b610a7f611a96565b610a8d60cc80546001019055565b8015610705576000805461ff0019169055505050565b6000610aae8261163e565b610aca5760405162461bcd60e51b81526004016105cf90612788565b50600090815260cb60205260409020600201546001600160a01b031690565b6000818152606760205260408120546001600160a01b0316806104cf5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cf565b606080600060cb60008581526020019081526020016000206040518060a0016040529081600082018054610b9390612628565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbf90612628565b8015610c0c5780601f10610be157610100808354040283529160200191610c0c565b820191906000526020600020905b815481529060010190602001808311610bef57829003601f168201915b50505050508152602001600182018054610c2590612628565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5190612628565b8015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b505050918352505060028201546001600160a01b039081166020808401919091526003909301549081166040830152600160a01b900461ffff166060909101528151910151909590945092505050565b6097546001600160a01b03163314610d185760405162461bcd60e51b81526004016105cf9061265d565b600091825260cb602052604090912060030180546001600160a01b0319166001600160a01b03909216919091179055565b60006001600160a01b038216610db45760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cf565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610dfa5760405162461bcd60e51b81526004016105cf9061265d565b610e046000611b11565b565b6000610e96610e5d610e1e6060870160408801612407565b6040516bffffffffffffffffffffffff19606083901b166020820152600090603401604051602081830303815290604052805190602001209050919050565b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611b6392505050565b610ed25760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b60448201526064016105cf565b612710610ee560a08601608087016127d7565b61ffff1610610f365760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b6000610f4160cc5490565b9050610f4d3382611b79565b6040805160a0810190915280610f6387806127fb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602090810190610fac908801886127fb565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610ff66060880160408901612407565b6001600160a01b031681526020016110146080880160608901612407565b6001600160a01b0316815260200161103260a08801608089016127d7565b61ffff169052600082815260cb6020908152604090912082518051919261105e92849290910190612047565b5060208281015180516110779260018501920190612047565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b031990941692909116919091179190911790556110e160cc80546001019055565b949350505050565b816110f38161163e565b6111365760405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b60448201526064016105cf565b6097546001600160a01b031633146111605760405162461bcd60e51b81526004016105cf9061265d565b827f459157ba24c7ab9878b165ef465fa6ae2ab42bcd8445f576be378768b0c47309836040516111909190612160565b60405180910390a2600083815260cb60209081526040909120835161081e92850190612047565b6060606680546104e490612628565b6001600160a01b03821633141561121f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cf565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6112953383611704565b6112b15760405162461bcd60e51b81526004016105cf90612692565b61081e84848484611b93565b60606112c88261163e565b6112e45760405162461bcd60e51b81526004016105cf90612788565b600082815260cb60205260409020805461072a90612628565b61271061131060a08301608084016127d7565b61ffff16106113615760405162461bcd60e51b815260206004820152601c60248201527f726f79616c747920746f6f2068696768212063616c6d20646f776e210000000060448201526064016105cf565b600061136c60cc5490565b90506113783382611b79565b6040805160a081019091528061138e84806127fb565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020908101906113d7908501856127fb565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050908252506020016114216060850160408601612407565b6001600160a01b0316815260200161143f6080850160608601612407565b6001600160a01b0316815260200161145d60a08501608086016127d7565b61ffff169052600082815260cb6020908152604090912082518051919261148992849290910190612047565b5060208281015180516114a29260018501920190612047565b5060408201516002820180546001600160a01b039283166001600160a01b031990911617905560608301516003909201805460809094015161ffff16600160a01b026001600160b01b0319909416929091169190911791909117905561150c60cc80546001019055565b5050565b6097546001600160a01b0316331461153a5760405162461bcd60e51b81526004016105cf9061265d565b6001600160a01b03811661159f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cf565b61085781611b11565b60006115b38261163e565b6115cf5760405162461bcd60e51b81526004016105cf90612788565b50600090815260cb60205260409020600301546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061161f57506001600160e01b03198216635b5e139f60e01b145b806104cf57506301ffc9a760e01b6001600160e01b03198316146104cf565b6000908152606760205260409020546001600160a01b0316151590565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061169082610ae9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c98190556040518181527fa2bc4a36b1e221bdcc16df9d7c15559a5f4f9902519c0f92ad3198f1df005e8b9060200160405180910390a150565b600061170f8261163e565b6117705760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cf565b600061177b83610ae9565b9050806001600160a01b0316846001600160a01b031614806117b65750836001600160a01b03166117ab84610567565b6001600160a01b0316145b806110e157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff166110e1565b826001600160a01b03166117fd82610ae9565b6001600160a01b0316146118655760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cf565b6001600160a01b0382166118c75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cf565b6118d260008261165b565b6001600160a01b03831660009081526068602052604081208054600192906118fb908490612842565b90915550506001600160a01b0382166000908152606860205260408120805460019290611929908490612859565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061199582610ae9565b90506119a260008361165b565b6001600160a01b03811660009081526068602052604081208054600192906119cb908490612842565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611a3e575060005460ff16155b611a5a5760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015611a7c576000805461ffff19166101011790555b611a84611bc6565b611a8c611bc6565b610a8d8383611c30565b600054610100900460ff1680611aaf575060005460ff16155b611acb5760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015611aed576000805461ffff19166101011790555b611af5611bc6565b611afd611cc5565b8015610857576000805461ff001916905550565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611b728260c95485611d25565b9392505050565b61150c828260405180602001604052806000815250611dd4565b611b9e8484846117ea565b611baa84848484611e07565b61081e5760405162461bcd60e51b81526004016105cf90612871565b600054610100900460ff1680611bdf575060005460ff16155b611bfb5760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015611afd576000805461ffff19166101011790558015610857576000805461ff001916905550565b600054610100900460ff1680611c49575060005460ff16155b611c655760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015611c87576000805461ffff19166101011790555b8251611c9a906065906020860190612047565b508151611cae906066906020850190612047565b508015610705576000805461ff0019169055505050565b600054610100900460ff1680611cde575060005460ff16155b611cfa5760405162461bcd60e51b81526004016105cf9061273a565b600054610100900460ff16158015611d1c576000805461ffff19166101011790555b611afd33611b11565b600081815b8551811015611dc9576000868281518110611d4757611d476128c3565b60200260200101519050808311611d89576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250611db6565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080611dc1816128d9565b915050611d2a565b509092149392505050565b611dde8383611f14565b611deb6000848484611e07565b6107055760405162461bcd60e51b81526004016105cf90612871565b60006001600160a01b0384163b15611f0957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e4b9033908990889088906004016128f4565b602060405180830381600087803b158015611e6557600080fd5b505af1925050508015611e95575060408051601f3d908101601f19168201909252611e9291810190612931565b60015b611eef573d808015611ec3576040519150601f19603f3d011682016040523d82523d6000602084013e611ec8565b606091505b508051611ee75760405162461bcd60e51b81526004016105cf90612871565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110e1565b506001949350505050565b6001600160a01b038216611f6a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cf565b611f738161163e565b15611fc05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cf565b6001600160a01b0382166000908152606860205260408120805460019290611fe9908490612859565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461205390612628565b90600052602060002090601f01602090048101928261207557600085556120bb565b82601f1061208e57805160ff19168380011785556120bb565b828001600101855582156120bb579182015b828111156120bb5782518255916020019190600101906120a0565b506120c79291506120cb565b5090565b5b808211156120c757600081556001016120cc565b6001600160e01b03198116811461085757600080fd5b60006020828403121561210857600080fd5b8135611b72816120e0565b6000815180845260005b818110156121395760208185018101518683018201520161211d565b8181111561214b576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611b726020830184612113565b60006020828403121561218557600080fd5b5035919050565b80356001600160a01b03811681146121a357600080fd5b919050565b600080604083850312156121bb57600080fd5b6121c48361218c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612203576122036121d2565b604051601f8501601f19908116603f0116810190828211818310171561222b5761222b6121d2565b8160405280935085815286868601111561224457600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261226f57600080fd5b611b72838335602085016121e8565b60008060006060848603121561229357600080fd5b83359250602084013567ffffffffffffffff808211156122b257600080fd5b6122be8783880161225e565b935060408601359150808211156122d457600080fd5b506122e18682870161225e565b9150509250925092565b60008060006060848603121561230057600080fd5b6123098461218c565b92506123176020850161218c565b9150604084013590509250925092565b6000806040838503121561233a57600080fd5b50508035926020909101359150565b6000806040838503121561235c57600080fd5b823567ffffffffffffffff8082111561237457600080fd5b6123808683870161225e565b9350602085013591508082111561239657600080fd5b506123a38582860161225e565b9150509250929050565b6040815260006123c06040830185612113565b82810360208401526123d28185612113565b95945050505050565b600080604083850312156123ee57600080fd5b823591506123fe6020840161218c565b90509250929050565b60006020828403121561241957600080fd5b611b728261218c565b600060a0828403121561243457600080fd5b50919050565b60008060006040848603121561244f57600080fd5b833567ffffffffffffffff8082111561246757600080fd5b61247387838801612422565b9450602086013591508082111561248957600080fd5b818601915086601f83011261249d57600080fd5b8135818111156124ac57600080fd5b8760208260051b85010111156124c157600080fd5b6020830194508093505050509250925092565b600080604083850312156124e757600080fd5b82359150602083013567ffffffffffffffff81111561250557600080fd5b6123a38582860161225e565b6000806040838503121561252457600080fd5b61252d8361218c565b91506020830135801515811461254257600080fd5b809150509250929050565b6000806000806080858703121561256357600080fd5b61256c8561218c565b935061257a6020860161218c565b925060408501359150606085013567ffffffffffffffff81111561259d57600080fd5b8501601f810187136125ae57600080fd5b6125bd878235602084016121e8565b91505092959194509250565b6000602082840312156125db57600080fd5b813567ffffffffffffffff8111156125f257600080fd5b6110e184828501612422565b6000806040838503121561261157600080fd5b61261a8361218c565b91506123fe6020840161218c565b600181811c9082168061263c57607f821691505b6020821081141561243457634e487b7160e01b600052602260045260246000fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612713576127136126e3565b500290565b60008261273557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b6000602082840312156127e957600080fd5b813561ffff81168114611b7257600080fd5b6000808335601e1984360301811261281257600080fd5b83018035915067ffffffffffffffff82111561282d57600080fd5b60200191503681900382131561090b57600080fd5b600082821015612854576128546126e3565b500390565b6000821982111561286c5761286c6126e3565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156128ed576128ed6126e3565b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061292790830184612113565b9695505050505050565b60006020828403121561294357600080fd5b8151611b72816120e056fea26469706673582212202c238b1fd654e1883bc9a8fd0758e7d910f97783921808be89c59f6f91fd688664736f6c63430008090033";

export class CTLTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CTLTest> {
    return super.deploy(overrides || {}) as Promise<CTLTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CTLTest {
    return super.attach(address) as CTLTest;
  }
  connect(signer: Signer): CTLTest__factory {
    return super.connect(signer) as CTLTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CTLTestInterface {
    return new utils.Interface(_abi) as CTLTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CTLTest {
    return new Contract(address, _abi, signerOrProvider) as CTLTest;
  }
}
