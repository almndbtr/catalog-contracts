/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Angela, AngelaInterface } from "../Angela";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_len",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_leafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "append",
    outputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_len",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_leafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "calculateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "_rootHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_leafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "calculateRootHashNoLength",
    outputs: [
      {
        internalType: "bytes32",
        name: "_rootHash",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_len",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_oldLeafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newLeafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "update",
    outputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_idx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_len",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_oldLeafHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61078b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063151bd4f514610066578063199409dc1461008c5780633c9ea2561461009f57806382c4dde1146100c2578063ce6366e3146100d5575b600080fd5b610079610074366004610524565b6100e8565b6040519081526020015b60405180910390f35b61007961009a36600461057e565b610233565b6100b26100ad3660046105ea565b61029e565b6040519015158152602001610083565b6100796100d0366004610524565b6102b8565b6100796100e336600461064e565b61039f565b6000836100f75750600061022b565b6000835b60018611156102275760006101116002896106b4565b61011c9060026106d6565b9050600088821415610136576101336001836106f5565b91505b8782101561016a578584815181106101505761015061070d565b6020026020010151905060018461016791906106f5565b93505b600088831080159061017c5750888a10155b15610186576101ec565b898311156101bf5760408051602081018690529081018390526060016040516020818303038152906040528051906020012090506101ec565b60408051602081018490529081018590526060016040516020818303038152906040528051906020012090505b60026101f960018b610723565b61020391906106b4565b61020e9060016106f5565b985061021b60028b6106b4565b995092506100fb915050565b9150505b949350505050565b6000610242878787878661029e565b6102875760405162461bcd60e51b815260206004820152601160248201527011549497d41493d3d197d2539590531251607a1b60448201526064015b60405180910390fd5b610293878785856100e8565b979650505050505050565b6000836102ad878786866100e8565b149695505050505050565b60008415610380576102cb600186610723565b85166103325783826000815181106102e5576102e561070d565b60200260200101511461032d5760405162461bcd60e51b815260206004820152601060248201526f11549497d493d3d517d253959053125160821b604482015260640161027e565b610380565b61034085808660008661029e565b6103805760405162461bcd60e51b815260206004820152601160248201527011549497d41493d3d197d2539590531251607a1b604482015260640161027e565b6103968561038f8160016106f5565b85856100e8565b95945050505050565b600082815b83518110156104755760006103ba6002886106b4565b6103c59060026106d6565b905060008583815181106103db576103db61070d565b60209081029190910101519050600088831115610423576040805160208101879052908101839052606001604051602081830303815290604052805190602001209050610450565b60408051602081018490529081018690526060016040516020818303038152906040528051906020012090505b61045b60028a6106b4565b9850935082915061046d90508161073a565b9150506103a4565b50949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104a557600080fd5b8135602067ffffffffffffffff808311156104c2576104c261047e565b8260051b604051601f19603f830116810181811084821117156104e7576104e761047e565b60405293845285810183019383810192508785111561050557600080fd5b83870191505b848210156102935781358352918301919083019061050b565b6000806000806080858703121561053a57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff81111561056657600080fd5b61057287828801610494565b91505092959194509250565b60008060008060008060c0878903121561059757600080fd5b863595506020870135945060408701359350606087013592506080870135915060a087013567ffffffffffffffff8111156105d157600080fd5b6105dd89828a01610494565b9150509295509295509295565b600080600080600060a0868803121561060257600080fd5b85359450602086013593506040860135925060608601359150608086013567ffffffffffffffff81111561063557600080fd5b61064188828901610494565b9150509295509295909350565b60008060006060848603121561066357600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561068857600080fd5b61069486828701610494565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000826106d157634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156106f0576106f061069e565b500290565b600082198211156107085761070861069e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156107355761073561069e565b500390565b600060001982141561074e5761074e61069e565b506001019056fea2646970667358221220655d65fd981f3f923e301a98ac74a104bf578ee90ee208fd0fcfa718a5d324f064736f6c63430008090033";

export class Angela__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Angela> {
    return super.deploy(overrides || {}) as Promise<Angela>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Angela {
    return super.attach(address) as Angela;
  }
  connect(signer: Signer): Angela__factory {
    return super.connect(signer) as Angela__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AngelaInterface {
    return new utils.Interface(_abi) as AngelaInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Angela {
    return new Contract(address, _abi, signerOrProvider) as Angela;
  }
}
